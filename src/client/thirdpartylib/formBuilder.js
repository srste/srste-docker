/*!
 * jQuery formBuilder: https://formbuilder.online/
 * Version: 3.2.2
 * Author: Kevin Chappell <kevin.b.chappell@gmail.com>
 */
!function(e){"use strict";!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=49)}([function(e,t,n){t.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(1),l=function(e){return e&&e.__esModule?e:{default:e}}(n(2));var s=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.rawConfig=jQuery.extend({},t),t=jQuery.extend({},t),this.preview=n,delete t.isPreview,this.preview&&delete t.required;var r=["label","description","subtype","required","disabled"],o=Array.isArray(r),i=0;for(r=o?r:r[Symbol.iterator]();;){var a;if(o){if(i>=r.length)break;a=r[i++]}else{if((i=r.next()).done)break;a=i.value}var l=a;this[l]=t[l],delete t[l]}t.id||(t.name?t.id=t.name:t.id="control-"+Math.floor(1e7*Math.random()+1)),this.id=t.id,this.type=t.type,this.description&&(t.title=this.description),e.controlConfig||(e.controlConfig={});var s=this.subtype?this.type+"."+this.subtype:this.type;this.classConfig=jQuery.extend({},e.controlConfig[s]||{}),this.subtype&&(t.type=this.subtype),this.required&&(t.required="required",t["aria-required"]="true"),this.disabled&&(t.disabled="disabled"),this.config=t,this.configure()}return e.registerElement=function(t,n,r){var o=r||"React";e.registerComponentFn=e.registerComponentFn?e.registerComponentFn:window.$ele,t&&n&&e.registerComponentFn&&e.registerComponentFn.registerElement(t,n,o)},e.register=function(t,n,r){var o=r?r+".":"";e.classRegister||(e.classRegister={}),Array.isArray(t)||(t=[t]);var i=t,a=Array.isArray(i),l=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(l>=i.length)break;s=i[l++]}else{if((l=i.next()).done)break;s=l.value}var u=s;-1===u.indexOf(".")?e.classRegister[o+u]=n:e.error("Ignoring type "+u+". Cannot use the character '.' in a type name.")}},e.getRegistered=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=Object.keys(e.classRegister);return n.length?n.filter(function(e){return t?e.indexOf(t+".")>-1:-1==e.indexOf(".")}):n},e.getRegisteredSubtypes=function(){var t={};for(var n in e.classRegister)if(e.classRegister.hasOwnProperty(n)){var r=n.split("."),i=o(r,2),a=i[0],l=i[1];if(!l)continue;t[a]||(t[a]=[]),t[a].push(l)}return t},e.getClass=function(t,n){var r=n?t+"."+n:t,o=e.classRegister[r]||e.classRegister[t];return o||e.error("Invalid control type. (Type: "+t+", Subtype: "+n+"). Please ensure you have registered it, and imported it correctly.")},e.loadCustom=function(t){var n=[];if(t&&(n=n.concat(t)),window.fbControls&&(n=n.concat(window.fbControls)),!this.fbControlsLoaded){var r=n,o=Array.isArray(r),i=0;for(r=o?r:r[Symbol.iterator]();;){var a;if(o){if(i>=r.length)break;a=r[i++]}else{if((i=r.next()).done)break;a=i.value}a(e,e.classRegister)}this.fbControlsLoaded=!0}},e.mi18n=function(e,t){var n=this.definition,o=n.i18n||{};o=o[l.default.locale]||o.default||o;var i=this.camelCase(e),a="object"==(void 0===o?"undefined":r(o))?o[i]||o[e]:o;if(a)return a;var s=n.mi18n;return"object"===(void 0===s?"undefined":r(s))&&(s=s[i]||s[e]),s||(s=i),l.default.get(s,t)},e.active=function(e){return!Array.isArray(this.definition.inactive)||-1==this.definition.inactive.indexOf(e)},e.label=function(e){return this.mi18n(e)},e.icon=function(e){var t=this.definition;return t&&"object"===r(t.icon)?t.icon[e]:t.icon},e.prototype.configure=function(){},e.prototype.build=function(){var e=this.config,t=e.label,n=e.type,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["label","type"]);return this.markup(n,(0,a.parsedHtml)(t),r)},e.prototype.on=function(e){var t=this,n={prerender:function(e){},render:function(e){var n=function(){t.onRender&&t.onRender()};t.css&&(0,a.getStyles)(t.css),t.js&&!(0,a.isCached)(t.js)?(0,a.getScripts)(t.js).done(n):n()}};return e?n[e]:n},e.error=function(e){throw new Error(e)},e.prototype.markup=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.element=(0,a.markup)(e,t,n),this.element},e.prototype.parsedHtml=function(e){return(0,a.parsedHtml)(e)},e.camelCase=function(e){return(0,a.camelCase)(e)},i(e,null,[{key:"definition",get:function(){return{}}}]),e}();t.default=s},function(t,n,r){n.__esModule=!0;var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();function l(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}window.fbLoaded={js:[],css:[]},window.fbEditors={quill:{},tinymce:{}};var s=n.trimObj=function(e){var t=[null,void 0,"",!1,"false"];for(var n in e)t.includes(e[n])?delete e[n]:Array.isArray(e[n])&&(e[n].length||delete e[n]);return e},u=n.validAttr=function(e){return!["values","enableOther","other","label","subtype"].includes(e)},d=(n.xmlAttrString=function(e){return Object.entries(e).map(function(e){var t=a(e,2),n=t[0],r=t[1];return p(n)+'="'+r+'"'}).join(" ")},n.attrString=function(e){return Object.entries(e).map(function(e){var t=a(e,2),n=t[0],r=t[1];return u(n)&&Object.values(f(n,r)).join("")}).filter(Boolean).join(" ")}),f=n.safeAttr=function(e,t){e=c(e);var n=void 0;return t&&(Array.isArray(t)?n=B(t.join(" ")):("boolean"==typeof t&&(t=t.toString()),n=B(t.trim()))),{name:e,value:t=t?'="'+n+'"':""}},c=(n.flattenArray=function e(t){return t.reduce(function(t,n){return t.concat(Array.isArray(n)?e(n):n)},[])},n.safeAttrName=function(e){return{className:"class"}[e]||p(e)}),p=n.hyphenCase=function(e){return(e=(e=e.replace(/[^\w\s\-]/gi,"")).replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})).replace(/\s/g,"-").replace(/^-+/g,"")},m=n.camelCase=function(e){return e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()})},b=n.bindEvents=function(e,t){if(t){var n=function(n){t.hasOwnProperty(n)&&e.addEventListener(n,function(e){return t[n](e)})};for(var r in t)n(r)}},h=n.nameAttr=function(e){var t=(new Date).getTime();return(e.type||p(e.label))+"-"+t},A=n.getContentType=function(e){return void 0===e?e:[["array",function(e){return Array.isArray(e)}],["node",function(e){return e instanceof window.Node||e instanceof window.HTMLElement}],["component",function(){return e&&e.dom}],[void 0===e?"undefined":i(e),function(){return!0}]].find(function(t){return t[1](e)})[0]},g=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=A(n),i=r.events,a=l(r,["events"]),s=document.createElement(t),u={string:function(e){s.innerHTML+=e},object:function(t){var n=t.tag,r=t.content,o=l(t,["tag","content"]);return s.appendChild(e(n,r,o))},node:function(e){return s.appendChild(e)},array:function(e){for(var t=0;t<e.length;t++)o=A(e[t]),u[o](e[t])},function:function(e){e=e(),o=A(e),u[o](e)},undefined:function(){}};for(var d in a)if(a.hasOwnProperty(d)){var f=c(d),p=Array.isArray(a[d])?q(a[d].join(" ").split(" ")).join(" "):a[d];s.setAttribute(f,p)}return n&&u[o](n),b(s,i),s};n.markup=g;var y=n.parseAttrs=function(e){var t=e.attributes,n={};return O(t,function(e){var r=t[e].value||"";r.match(/false|true/g)?r="true"===r:r.match(/undefined/g)&&(r=void 0),r&&(n[m(t[e].name)]=r)}),n},v=n.parseOptions=function(e){for(var t=[],n=0;n<e.length;n++){var r=o({},y(e[n]),{label:e[n].textContent});t.push(r)}return t},w=n.parseXML=function(e){var t=(new window.DOMParser).parseFromString(e,"text/xml"),n=[];if(t)for(var r=t.getElementsByTagName("field"),o=0;o<r.length;o++){var i=y(r[o]),a=r[o].getElementsByTagName("option");a&&a.length&&(i.values=v(a)),n.push(i)}return n},C=n.parsedHtml=function(e){var t=document.createElement("textarea");return t.innerHTML=e,t.textContent},x=n.escapeHtml=function(e){var t=document.createElement("textarea");return t.textContent=e,t.innerHTML},B=n.escapeAttr=function(e){var t={'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;"};return"string"==typeof e?e.replace(/["&<>]/g,function(e){return t[e]||e}):e},k=n.escapeAttrs=function(e){for(var t in e)e.hasOwnProperty(t)&&(e[t]=B(e[t]));return e},O=n.forEach=function(e,t,n){for(var r=0;r<e.length;r++)t.call(n,r,e[r])},q=n.unique=function(e){return e.filter(function(e,t,n){return n.indexOf(e)===t})},E=n.removeFromArray=function(e,t){var n=t.indexOf(e);n>-1&&t.splice(n,1)},j=n.getScripts=function(e,t){var n,r=jQuery,o=[];return Array.isArray(e)||(e=[e]),D(e)||(o=jQuery.map(e,function(e){var n={dataType:"script",cache:!0,url:(t||"")+e};return jQuery.ajax(n).done(function(){return window.fbLoaded.js.push(e)})})),o.push(jQuery.Deferred(function(e){return r(e.resolve)})),(n=jQuery).when.apply(n,o)},D=n.isCached=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"js",n=!1,r=window.fbLoaded[t];return n=Array.isArray(e)?e.every(function(e){return r.includes(e)}):r.includes(e),n},L=n.getStyles=function(t,n){console.log("Calling getStyles..."),Array.isArray(t)||(t=[t]),t.forEach(function(t){var r="href",o=t,a="";if("object"==(void 0===t?"undefined":i(t))&&(r=t.type||(t.style?"inline":"href"),a=t.id,t="inline"==r?t.style:t.href,o=a||t.href||t.style),!D(o,"css")){if("href"==r){var l=document.createElement("link");l.type="text/css",l.rel="stylesheet",l.href=(n||"")+t,document.head.appendChild(l)}else e('<style type="text/css">'+t+"</style>").attr("id",a).appendTo(e(document.head));window.fbLoaded.css.push(o)}})},M=n.capitalize=function(e){return e.replace(/\b\w/g,function(e){return e.toUpperCase()})},S=n.merge=function e(t,n){var r=Object.assign({},t,n);for(var o in n)r.hasOwnProperty(o)&&(Array.isArray(n[o])?r[o]=Array.isArray(t[o])?q(t[o].concat(n[o])):n[o]:"object"===i(n[o])?r[o]=e(t[o],n[o]):r[o]=n[o]);return r},I=n.addEventListeners=function(e,t,n){return t.split(" ").forEach(function(t){return e.addEventListener(t,n,!1)})},F=n.closest=function(e,t){for(var n=t.replace(".","");(e=e.parentElement)&&!e.classList.contains(n););return e},N=n.mobileClass=function(){var e="";return function(t){/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)&&(e="fb-mobile")}(navigator.userAgent||navigator.vendor||window.opera),e},T=n.safename=function(e){return e.replace(/\s/g,"-").replace(/[^a-zA-Z0-9[\]_-]/g,"")},U=n.forceNumber=function(e){return e.replace(/[^0-9]/g,"")},z=n.subtract=function(e,t){return t.filter(function(e){return!~this.indexOf(e)},e)},R=(n.insertStyle=function(e){var t=(e=Array.isArray(e)?e:[e]).map(function(e){var t=e.src,n=e.id;return new Promise(function(e,r){if(window.fbLoaded.css.includes(t))return e(t);var o=g("link",null,{href:t,rel:"stylesheet",id:n});console.log("In href3...."),document.head.insertBefore(o,document.head.firstChild)})});return Promise.all(t)},n.removeStyle=function(e){var t=document.getElementById(e);return t.parentElement.removeChild(t)},{addEventListeners:I,attrString:d,camelCase:m,capitalize:M,closest:F,getContentType:A,escapeAttr:B,escapeAttrs:k,escapeHtml:x,forceNumber:U,forEach:O,getScripts:j,getStyles:L,hyphenCase:p,isCached:D,markup:g,merge:S,mobileClass:N,nameAttr:h,parseAttrs:y,parsedHtml:C,parseOptions:v,parseXML:w,removeFromArray:E,safeAttr:f,safeAttrName:c,safename:T,subtract:z,trimObj:s,unique:q,validAttr:u});n.default=R},function(e,t){
/*!
 * mi18n - https://github.com/Draggable/mi18n
 * Version: 0.4.7
 * Author: Kevin Chappell <kevin.b.chappell@gmail.com> (http://kevin-chappell.com)
 */
e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}([function(e,t,n){var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=n(2),i=n(10),a=Object.prototype.toString;function l(e){return"[object Array]"===a.call(e)}function s(e){return null!==e&&"object"===(void 0===e?"undefined":r(e))}function u(e){return"[object Function]"===a.call(e)}function d(e,t){if(null!==e&&void 0!==e)if("object"!==(void 0===e?"undefined":r(e))&&(e=[e]),l(e))for(var n=0,o=e.length;n<o;n++)t.call(null,e[n],n,e);else for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.call(null,e[i],i,e)}e.exports={isArray:l,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:i,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:u,isStream:function(e){return s(e)&&u(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:d,merge:function e(){var t={};function n(n,o){"object"===r(t[o])&&"object"===(void 0===n?"undefined":r(n))?t[o]=e(t[o],n):t[o]=n}for(var o=0,i=arguments.length;o<i;o++)d(arguments[o],n);return t},extend:function(e,t,n){return d(t,function(t,r){e[r]=n&&"function"==typeof t?o(t,n):t}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,t,n){(function(t){var r=n(0),o=n(13),i={"Content-Type":"application/x-www-form-urlencoded"};function a(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var l={adapter:function(){var e;return"undefined"!=typeof XMLHttpRequest?e=n(3):void 0!==t&&(e=n(3)),e}(),transformRequest:[function(e,t){return o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(a(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(a(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],function(e){l.headers[e]={}}),r.forEach(["post","put","patch"],function(e){l.headers[e]=r.merge(i)}),e.exports=l}).call(this,n(12))},function(e,t,n){e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){var r=n(0),o=n(14),i=n(16),a=n(17),l=n(18),s=n(4),u="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||n(19);e.exports=function(e){return new Promise(function(t,d){var f=e.data,c=e.headers;r.isFormData(f)&&delete c["Content-Type"];var p=new XMLHttpRequest,m="onreadystatechange",b=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in p||l(e.url)||(p=new window.XDomainRequest,m="onload",b=!0,p.onprogress=function(){},p.ontimeout=function(){}),e.auth){var h=e.auth.username||"",A=e.auth.password||"";c.Authorization="Basic "+u(h+":"+A)}if(p.open(e.method.toUpperCase(),i(e.url,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p[m]=function(){if(p&&(4===p.readyState||b)&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in p?a(p.getAllResponseHeaders()):null,r={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:1223===p.status?204:p.status,statusText:1223===p.status?"No Content":p.statusText,headers:n,config:e,request:p};o(t,d,r),p=null}},p.onerror=function(){d(s("Network Error",e,null,p)),p=null},p.ontimeout=function(){d(s("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var g=n(20),y=(e.withCredentials||l(e.url))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;y&&(c[e.xsrfHeaderName]=y)}if("setRequestHeader"in p&&r.forEach(c,function(e,t){void 0===f&&"content-type"===t.toLowerCase()?delete c[t]:p.setRequestHeader(t,e)}),e.withCredentials&&(p.withCredentials=!0),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){p&&(p.abort(),d(e),p=null)}),void 0===f&&(f=null),p.send(f)})}},function(e,t,n){var r=n(15);e.exports=function(e,t,n,o,i){var a=new Error(e);return r(a,t,n,o,i)}},function(e,t,n){e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t,n){t.__esModule=!0,t.I18N=void 0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(8),a={extension:".lang",location:"assets/lang/",langs:["en-US"],locale:"en-US",override:{}},l=t.I18N=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.langs=Object.create(null),this.loaded=[],this.processConfig(t)}return e.prototype.processConfig=function(e){var t=this,n=Object.assign({},a,e),r=n.location,o=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(n,["location"]),i=r.replace(/\/?$/,"/");this.config=Object.assign({},{location:i},o);var l=this.config,s=l.override,u=l.preloaded,d=void 0===u?{}:u,f=Object.entries(this.langs).concat(Object.entries(s||d));this.langs=f.reduce(function(e,n){var r=n[0],o=n[1];return e[r]=t.applyLanguage.call(t,r,o),e},{}),this.locale=this.config.locale||this.config.langs[0]},e.prototype.init=function(e){return this.processConfig.call(this,Object.assign({},this.config,e)),this.setCurrent(this.locale)},e.prototype.addLanguage=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t="string"==typeof t?this.processFile.call(this,t):t,this.applyLanguage.call(this,e,t),this.config.langs.push("locale")},e.prototype.getValue=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.locale;return this.langs[t]&&this.langs[t][e]||this.getFallbackValue(e)},e.prototype.getFallbackValue=function(e){var t=Object.values(this.langs).find(function(t){return t[e]});return t&&t[e]},e.prototype.makeSafe=function(e){var t={"{":"\\{","}":"\\}","|":"\\|"};return e=e.replace(/\{|\}|\|/g,function(e){return t[e]}),new RegExp(e,"g")},e.prototype.put=function(e,t){return this.current[e]=t},e.prototype.get=function(e,t){var n=this.getValue(e);if(n){var o=n.match(/\{[^}]+?\}/g),i=void 0;if(t&&o)if("object"===(void 0===t?"undefined":r(t)))for(var a=0;a<o.length;a++)i=o[a].substring(1,o[a].length-1),n=n.replace(this.makeSafe(o[a]),t[i]||"");else n=n.replace(/\{[^}]+?\}/g,t);return n}},e.prototype.fromFile=function(e){for(var t,n=e.split("\n"),r={},o=0;o<n.length;o++)(t=n[o].match(/^(.+?) *?= *?([^\n]+)/))&&(r[t[1]]=t[2].replace(/^\s+|\s+$/,""));return r},e.prototype.processFile=function(e){return this.fromFile(e.replace(/\n\n/g,"\n"))},e.prototype.loadLang=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this;return new Promise(function(r,o){if(-1!==n.loaded.indexOf(e)&&t)return n.applyLanguage.call(n,n.langs[e]),r(n.langs[e]);var a=[n.config.location,e,n.config.extension].join("");return(0,i.get)(a).then(function(t){var o=t.data,i=n.processFile(o);return n.applyLanguage.call(n,e,i),n.loaded.push(e),r(n.langs[e])}).catch(function(){var t=n.applyLanguage.call(n,e);r(t)})})},e.prototype.applyLanguage=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.config.override[e]||{},r=this.langs[e]||{};return this.langs[e]=Object.assign({},r,t,n),this.langs[e]},e.prototype.setCurrent=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"en-US";return this.loadLang(t).then(function(){return e.locale=t,e.current=e.langs[t],e.current})},o(e,[{key:"getLangs",get:function(){return this.config.langs}}]),e}();t.default=new l},function(e,t,n){e.exports=n(9)},function(e,t,n){var r=n(0),o=n(2),i=n(11),a=n(1);function l(e){var t=new i(e),n=o(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var s=l(a);s.Axios=i,s.create=function(e){return l(r.merge(a,e))},s.Cancel=n(6),s.CancelToken=n(26),s.isCancel=n(5),s.all=function(e){return Promise.all(e)},s.spread=n(27),e.exports=s,e.exports.default=s},function(e,t,n){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
function r(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(r(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&r(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,t,n){var r=n(1),o=n(0),i=n(21),a=n(22);function l(e){this.defaults=e,this.interceptors={request:new i,response:new i}}l.prototype.request=function(e){"string"==typeof e&&(e=o.merge({url:arguments[0]},arguments[1])),(e=o.merge(r,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var t=[a,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},o.forEach(["delete","get","head","options"],function(e){l.prototype[e]=function(t,n){return this.request(o.merge(n||{},{method:e,url:t}))}}),o.forEach(["post","put","patch"],function(e){l.prototype[e]=function(t,n,r){return this.request(o.merge(r||{},{method:e,url:t,data:n}))}}),e.exports=l},function(e,t,n){var r,o,i=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function l(){throw new Error("clearTimeout has not been defined")}function s(e){if(r===setTimeout)return setTimeout(e,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:a}catch(e){r=a}try{o="function"==typeof clearTimeout?clearTimeout:l}catch(e){o=l}}();var u,d=[],f=!1,c=-1;function p(){f&&u&&(f=!1,u.length?d=u.concat(d):c=-1,d.length&&m())}function m(){if(!f){var e=s(p);f=!0;for(var t=d.length;t;){for(u=d,d=[];++c<t;)u&&u[c].run();c=-1,t=d.length}u=null,f=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===l||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{o(e)}catch(t){try{return o.call(null,e)}catch(t){return o.call(this,e)}}}(e)}}function b(e,t){this.fun=e,this.array=t}function h(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new b(e,t)),1!==d.length||f||s(m)},b.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=h,i.addListener=h,i.once=h,i.off=h,i.removeListener=h,i.removeAllListeners=h,i.emit=h,i.prependListener=h,i.prependOnceListener=h,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(e,t,n){var r=n(0);e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},function(e,t,n){var r=n(4);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e}},function(e,t,n){var r=n(0);function o(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var a=[];r.forEach(t,function(e,t){null!==e&&void 0!==e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(t)+"="+o(e))}))}),i=a.join("&")}return i&&(e+=(-1===e.indexOf("?")?"?":"&")+i),e}},function(e,t,n){var r=n(0),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,a={};return e?(r.forEach(e.split("\n"),function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(a[t]&&o.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}}),a):a}},function(e,t,n){var r=n(0);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){function r(){this.message="String contains an invalid character"}r.prototype=new Error,r.prototype.code=5,r.prototype.name="InvalidCharacterError",e.exports=function(e){for(var t,n,o=String(e),i="",a=0,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";o.charAt(0|a)||(l="=",a%1);i+=l.charAt(63&t>>8-a%1*8)){if((n=o.charCodeAt(a+=.75))>255)throw new r;t=t<<8|n}return i}},function(e,t,n){var r=n(0);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,i,a){var l=[];l.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&l.push("expires="+new Date(n).toGMTString()),r.isString(o)&&l.push("path="+o),r.isString(i)&&l.push("domain="+i),!0===a&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){var r=n(0);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=o},function(e,t,n){var r=n(0),o=n(23),i=n(5),a=n(1),l=n(24),s=n(25);function u(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return u(e),e.baseURL&&!l(e.url)&&(e.url=s(e.baseURL,e.url)),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),r.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||a.adapter)(e).then(function(t){return u(e),t.data=o(t.data,t.headers,e.transformResponse),t},function(t){return i(t)||(u(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,n){var r=n(0);e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},function(e,t,n){e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){var r=n(6);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new r(e),t(n.reason))})}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o(function(t){e=t}),cancel:e}},e.exports=o},function(e,t,n){e.exports=function(e){return function(t){return e.apply(null,t)}}}])},function(t,n,r){n.__esModule=!0;var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=function(e){return e&&e.__esModule?e:{default:e}}(r(0));var a=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,t.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,t),n.prototype.build=function(){var e=this.config,t=e.value,n=void 0===t?"":t,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["value"]);return this.field=this.markup("textarea",this.parsedHtml(n),r),this.field},n.prototype.onRender=function(){this.config.userData&&e("#"+this.config.name).val(this.config.userData[0])},n.prototype.on=function(n){var r=this;return"prerender"==n&&this.preview?function(t){r.field&&(t=r.field),e(t).on("mousedown",function(e){e.stopPropagation()})}:t.prototype.on.call(this,n)},o(n,null,[{key:"definition",get:function(){return{mi18n:{textarea:"textArea"}}}}]),n}(i.default);n.default=a,i.default.register("textarea",a),i.default.register("textarea",a,"textarea")},function(e,t,n){t.__esModule=!0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=a(n(0)),i=a(n(2));function a(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.register=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];t.customRegister={},t.def||(t.def={icon:{},i18n:{}}),t.templates=e;var r=i.default.locale;t.def.i18n[r]||(t.def.i18n[r]={}),o.default.register(Object.keys(e),t);var a=n,l=Array.isArray(a),s=0;for(a=l?a:a[Symbol.iterator]();;){var u;if(l){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var d=u,f=d.type;if(d.attrs=d.attrs||{},!f){if(!d.attrs.type){this.error("Ignoring invalid custom field definition. Please specify a type property.");continue}f=d.attrs.type}var c=d.subtype||f;if(!e[f]){var p=o.default.getClass(f,d.subtype);if(!p){this.error("Error while registering custom field: "+f+(d.subtype?":"+d.subtype:"")+". Unable to find any existing defined control or template for rendering.");continue}c=d.datatype?d.datatype:f+"-"+Math.floor(9e3*Math.random()+1e3),t.customRegister[c]=jQuery.extend(d,{type:f,class:p})}t.def.i18n[r][c]=d.label,t.def.icon[c]=d.icon}},t.getRegistered=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return e?o.default.getRegistered(e):Object.keys(t.customRegister)},t.lookup=function(e){return t.customRegister[e]},t.prototype.build=function(){var e=t.templates[this.type];if(!e)return this.error("Invalid custom control type. Please ensure you have registered it correctly as a template option.");var n=Object.assign(this.config),r=["label","description","subtype","id","isPreview","required","title","aria-required","type"],o=Array.isArray(r),i=0;for(r=o?r:r[Symbol.iterator]();;){var a;if(o){if(i>=r.length)break;a=r[i++]}else{if((i=r.next()).done)break;a=i.value}var l=a;n[l]=this.config[l]||this[l]}return(e=(e=e.bind(this))(n)).js&&(this.js=e.js),e.css&&(this.css=e.css),this.onRender=e.onRender,{field:e.field,layout:e.layout}},r(t,null,[{key:"definition",get:function(){return t.def}}]),t}(o.default);t.default=l,l.customRegister={}},function(e,t,n){t.__esModule=!0;var r=t.instanceDom={},o=t.defaultSubtypes={text:["text","password","email","color","tel"],header:["h1","h2","h3"],button:["button","submit","reset"],paragraph:["p","address","blockquote","canvas","output"],textarea:["textarea","quill"]},i=(t.remove=function(e){e.parentNode&&e.parentNode.removeChild(e)},t.empty=function(e){for(;e.firstChild;)e.removeChild(e.firstChild);return e}),a=t.filter=function(e,t){var n=[],r=["none","block"];(!(arguments.length>2&&void 0!==arguments[2])||arguments[2])&&(r=r.reverse());for(var o=e.length-1;o>=0;o--){-1!==e[o].textContent.toLowerCase().indexOf(t.toLowerCase())?(e[o].style.display=r[0],n.push(e[o])):e[o].style.display=r[1]}return n},l=t.optionFields=["select","checkbox-group","checkbox","radio-group","autocomplete"],s=t.optionFieldsRegEx=new RegExp("("+l.join("|")+")"),u=function(){function e(t){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.optionFields=l,this.optionFieldsRegEx=s,this.subtypes=o,this.empty=i,this.filter=a,r[t]=this,r[t]}return e.prototype.onRender=function(e,t){var n=this;e.parentElement?t(e):window.requestAnimationFrame(function(){return n.onRender(e,t)})},e}();t.default=u},function(t,n,r){n.__esModule=!0;var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=function(e){return e&&e.__esModule?e:{default:e}}(r(0));var a=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,t.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,t),n.prototype.build=function(){var e=this.config.name;e=this.config.multiple?e+"[]":e;var t=Object.assign({},this.config,{name:e});return this.dom=this.markup("input",null,t),this.dom},n.prototype.onRender=function(){this.config.userData&&e(this.dom).val(this.config.userData[0])},o(n,null,[{key:"definition",get:function(){return{mi18n:{date:"dateField",file:"fileUpload"}}}}]),n}(i.default);n.default=a,i.default.register(["text","file","date","number"],a),i.default.register(["text","password","email","color","tel"],a,"text")},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),i=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),a=null,l=0,s=[],u=n(7);function d(e,t){for(var n=0;n<e.length;n++){var o=e[n],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(h(o.parts[a],t))}else{var l=[];for(a=0;a<o.parts.length;a++)l.push(h(o.parts[a],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function c(e,t){var n=i(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=i(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function p(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function m(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),b(t,e.attrs),c(e,t),t}function b(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function h(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var s=l++;n=a||(a=m(t)),r=g.bind(null,n,s,!1),o=g.bind(null,n,s,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",b(t,e.attrs),c(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=u(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){p(n),n.href&&URL.revokeObjectURL(n.href)}):(n=m(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){p(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return d(n,t),function(e){for(var o=[],i=0;i<n.length;i++){var a=n[i];(l=r[a.id]).refs--,o.push(l)}e&&d(f(e,t),t);for(i=0;i<o.length;i++){var l;if(0===(l=o[i]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete r[l.id]}}}};var A=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=A(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){t.__esModule=!0,t.config=t.defaultI18n=t.styles=t.defaultOptions=void 0,function(e){return e&&e.__esModule?e:{default:e}}(n(2)).default.addLanguage("en-US",{NATIVE_NAME:"English (US)",ENGLISH_NAME:"English",addOption:"Add Option +",allFieldsRemoved:"All fields were removed.",allowMultipleFiles:"Allow users to upload multiple files",autocomplete:"Autocomplete",button:"Button",cannotBeEmpty:"This field cannot be empty",checkboxGroup:"Checkbox Group",checkbox:"Checkbox",checkboxes:"Checkboxes",className:"Class",clearAllMessage:"Are you sure you want to clear all fields?",clear:"Clear",close:"Close",content:"Content",copy:"Copy To Clipboard",copyButton:"&#43;",copyButtonTooltip:"Copy",dateField:"Date Field",description:"Help Text",descriptionField:"Description",devMode:"Developer Mode",editNames:"Edit Names",editorTitle:"Form Elements",editXML:"Edit XML",enableOther:"Enable &quot;Other&quot;",enableOtherMsg:"Let users to enter an unlisted option",fieldDeleteWarning:"false",fieldVars:"Field Variables",fieldNonEditable:"This field cannot be edited.",fieldRemoveWarning:"Are you sure you want to remove this field?",fileUpload:"File Upload",formUpdated:"Form Updated",getStarted:"Drag a field from the right to this area",header:"Header",hide:"Edit",hidden:"Hidden Input",inline:"Inline",inlineDesc:"Display {type} inline",label:"Label",labelEmpty:"Field Label cannot be empty",limitRole:"Limit access to one or more of the following roles:",mandatory:"Mandatory",maxlength:"Max Length",minOptionMessage:"This field requires a minimum of 2 options",minSelectionRequired:"Minimum {min} selections required",multipleFiles:"Multiple Files",name:"Name",no:"No",noFieldsToClear:"There are no fields to clear",number:"Number",off:"Off",on:"On",option:"Option",optionCount:"Option {count}",options:"Options",optional:"optional",optionLabelPlaceholder:"Label",optionValuePlaceholder:"Value",optionEmpty:"Option value required",other:"Other",paragraph:"Paragraph",placeholder:"Placeholder","placeholders.value":"Value","placeholders.label":"Label","placeholders.email":"Enter you email","placeholders.className":"space separated classes","placeholders.password":"Enter your password",preview:"Preview",radioGroup:"Radio Group",radio:"Radio",removeMessage:"Remove Element",removeOption:"Remove Option",remove:"&#215;",required:"Required",requireValidOption:"Only accept a pre-defined Option",richText:"Rich Text Editor",roles:"Access",rows:"Rows",save:"Save",selectOptions:"Options",select:"Select",selectColor:"Select Color",selectionsMessage:"Allow Multiple Selections",size:"Size","size.xs":"Extra Small","size.sm":"Small","size.m":"Default","size.lg":"Large",style:"Style","styles.btn.default":"Default","styles.btn.danger":"Danger","styles.btn.info":"Info","styles.btn.primary":"Primary","styles.btn.success":"Success","styles.btn.warning":"Warning",subtype:"Type",text:"Text Field",textArea:"Text Area",toggle:"Toggle",warning:"Warning!",value:"Value",viewJSON:"[{&hellip;}]",viewXML:"&lt;/&gt;",yes:"Yes"});t.defaultOptions={actionButtons:[],allowStageSort:!0,append:!1,controlOrder:["autocomplete","button","checkbox-group","checkbox","date","file","header","hidden","number","paragraph","radio-group","select","text","textarea","test"],controlPosition:"right",dataType:"json",defaultFields:[],disabledActionButtons:[],disabledAttrs:[],disabledFieldButtons:{},disabledSubtypes:{},disableFields:[],disableHTMLLabels:!1,disableInjectedStyle:!1,editOnAdd:!1,fields:[],fieldRemoveWarn:!1,fieldEditContainer:null,inputSets:[],notify:{error:console.error,success:console.log,warning:console.warn},onAddField:function(e,t){return e},onClearAll:function(){return null},onCloseFieldEdit:function(){return null},onOpenFieldEdit:function(){return null},onSave:function(e,t){return null},prepend:!1,replaceFields:[],roles:{1:"Administrator"},scrollToFieldOnAdd:!0,showActionButtons:!0,sortableControls:!1,stickyControls:{enable:!0,offset:{top:5,bottom:"auto",right:"auto"}},subtypes:{},templates:{},typeUserAttrs:{},typeUserDisabledAttrs:{},typeUserEvents:{},registerComponentFn:null},t.styles={btn:["default","danger","info","primary","success","warning"]},t.defaultI18n={location:"https://formbuilder.online/assets/lang/"},t.config={}},function(e,t,n){function r(e){var t=void 0;return"function"==typeof Event?t=new Event(e):(t=document.createEvent("Event")).initEvent(e,!0,!0),t}t.__esModule=!0;var o={loaded:r("loaded"),viewData:r("viewData"),userDeclined:r("userDeclined"),modalClosed:r("modalClosed"),modalOpened:r("modalOpened"),formSaved:r("formSaved"),fieldAdded:r("fieldAdded"),fieldRemoved:r("fieldRemoved"),fieldRendered:r("fieldRendered"),fieldEditOpened:r("fieldEditOpened"),fieldEditClosed:r("fieldEditClosed")};t.default=o},function(e,t,n){t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var o=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.configure=function(){this.js="//cdn.quilljs.com/1.2.4/quill.js",this.css="//cdn.quilljs.com/1.2.4/quill.snow.css"},t.prototype.build=function(){var e=this.config,t=(e.value,function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["value"]));return this.field=this.markup("div",null,t),this.field},t.prototype.onRender=function(e){var t=this.config.value||"",n=window.Quill.import("delta");window.fbEditors.quill[this.id]={};var r=window.fbEditors.quill[this.id];r.instance=new window.Quill(this.field,{modules:{toolbar:[[{header:[1,2,!1]}],["bold","italic","underline"],["code-block"]]},placeholder:this.config.placeholder||"",theme:"snow"}),r.data=new n,t&&r.instance.setContents(window.JSON.parse(this.parsedHtml(t))),r.instance.on("text-change",function(e){r.data=r.data.compose(e)})},t}(r.default);t.default=o,r.default.register("quill",o,"textarea")},function(e,t,n){t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var o=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.configure=function(){if(this.js=["https://cdn.tinymce.com/4/tinymce.min.js"],this.classConfig.js){var e=this.classConfig.js;Array.isArray(e)||(e=new Array(e)),this.js.concat(e),delete this.classConfig.js}this.classConfig.css&&(this.css=this.classConfig.css),this.editorOptions={height:250,paste_data_images:!0,plugins:["advlist autolink lists link image charmap print preview anchor","searchreplace visualblocks code fullscreen","insertdatetime media table contextmenu paste code"],toolbar:"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | table"}},t.prototype.build=function(){var e=this.config,t=e.value,n=void 0===t?"":t,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["value"]);return this.field=this.markup("textarea",this.parsedHtml(n),r),r.disabled&&(this.editorOptions.readonly=!0),this.field},t.prototype.onRender=function(e){window.tinymce.editors[this.id]&&window.tinymce.editors[this.id].remove();var t=jQuery.extend(this.editorOptions,this.classConfig);t.target=this.field,window.tinymce.init(t),this.config.userData&&window.tinymce.editors[this.id].setContent(this.parsedHtml(this.config.userData[0]))},t}(r.default);t.default=o,r.default.register("tinymce",o,"textarea")},function(t,n,r){n.__esModule=!0;var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=function(e){return e&&e.__esModule?e:{default:e}}(r(6));var a=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,t.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,t),n.prototype.configure=function(){var t=this;this.js=this.classConfig.js||"//cdnjs.cloudflare.com/ajax/libs/file-uploader/5.14.2/jquery.fine-uploader/jquery.fine-uploader.min.js",this.css=[this.classConfig.css||"//cdnjs.cloudflare.com/ajax/libs/file-uploader/5.14.2/jquery.fine-uploader/fine-uploader-gallery.min.css",{type:"inline",id:"fineuploader-inline",style:"\n          .qq-uploader .qq-error-message {\n            position: absolute;\n            left: 20%;\n            top: 20px;\n            width: 60%;\n            color: #a94442;\n            background: #f2dede;\n            border: solid 1px #ebccd1;\n            padding: 15px;\n            line-height: 1.5em;\n            text-align: center;\n            z-index: 99999;\n          }\n          .qq-uploader .qq-error-message span {\n            display: inline-block;\n            text-align: left;\n          }"}],this.handler=this.classConfig.handler||"/upload",["js","css","handler"].forEach(function(e){return delete t.classConfig[e]});var n=this.classConfig.template||'\n      <div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="Drop files here">\n        <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">\n          <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>\n        </div>\n        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>\n          <span class="qq-upload-drop-area-text-selector"></span>\n        </div>\n        <div class="qq-upload-button-selector qq-upload-button">\n          <div>Upload a file</div>\n        </div>\n        <span class="qq-drop-processing-selector qq-drop-processing">\n          <span>Processing dropped files...</span>\n          <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>\n        </span>\n        <ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals">\n          <li>\n            <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>\n            <div class="qq-progress-bar-container-selector qq-progress-bar-container">\n              <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>\n            </div>\n            <span class="qq-upload-spinner-selector qq-upload-spinner"></span>\n            <div class="qq-thumbnail-wrapper">\n              <img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale>\n            </div>\n            <button type="button" class="qq-upload-cancel-selector qq-upload-cancel">X</button>\n            <button type="button" class="qq-upload-retry-selector qq-upload-retry">\n              <span class="qq-btn qq-retry-icon" aria-label="Retry"></span>\n              Retry\n            </button>\n            <div class="qq-file-info">\n              <div class="qq-file-name">\n                <span class="qq-upload-file-selector qq-upload-file"></span>\n                <span class="qq-edit-filename-icon-selector qq-btn qq-edit-filename-icon" aria-label="Edit filename"></span>\n              </div>\n              <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">\n              <span class="qq-upload-size-selector qq-upload-size"></span>\n              <button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete">\n                <span class="qq-btn qq-delete-icon" aria-label="Delete"></span>\n              </button>\n              <button type="button" class="qq-btn qq-upload-pause-selector qq-upload-pause">\n                <span class="qq-btn qq-pause-icon" aria-label="Pause"></span>\n              </button>\n              <button type="button" class="qq-btn qq-upload-continue-selector qq-upload-continue">\n                <span class="qq-btn qq-continue-icon" aria-label="Continue"></span>\n              </button>\n            </div>\n          </li>\n        </ul>\n        <dialog class="qq-alert-dialog-selector">\n          <div class="qq-dialog-message-selector"></div>\n          <div class="qq-dialog-buttons">\n            <button type="button" class="qq-cancel-button-selector">Close</button>\n          </div>\n        </dialog>\n        <dialog class="qq-confirm-dialog-selector">\n          <div class="qq-dialog-message-selector"></div>\n          <div class="qq-dialog-buttons">\n            <button type="button" class="qq-cancel-button-selector">No</button>\n            <button type="button" class="qq-ok-button-selector">Yes</button>\n          </div>\n        </dialog>\n        <dialog class="qq-prompt-dialog-selector">\n          <div class="qq-dialog-message-selector"></div>\n          <input type="text">\n          <div class="qq-dialog-buttons">\n            <button type="button" class="qq-cancel-button-selector">Cancel</button>\n            <button type="button" class="qq-ok-button-selector">Ok</button>\n          </div>\n        </dialog>\n      </div>';this.fineTemplate=e("<div/>").attr("id","qq-template").html(n)},n.prototype.build=function(){return this.input=this.markup("input",null,{type:"hidden",name:this.config.name,id:this.config.name}),this.wrapper=this.markup("div","",{id:this.config.name+"-wrapper"}),[this.input,this.wrapper]},n.prototype.onRender=function(){var t=e(this.wrapper),n=e(this.input),r=jQuery.extend(!0,{request:{endpoint:this.handler},deleteFile:{enabled:!0,endpoint:this.handler},chunking:{enabled:!0,concurrent:{enabled:!0},success:{endpoint:this.handler+(-1==this.handler.indexOf("?")?"?":"&")+"done"}},resume:{enabled:!0},retry:{enableAuto:!0,showButton:!0},callbacks:{onError:function(n,r,o,i){"."!=o.slice(-1)&&(o+=".");var a=e("<div />").addClass("qq-error-message").html("<span>Error processing upload: <b>"+r+"</b>.<br />Reason: "+o+"</span>").prependTo(t.find(".qq-uploader"));setTimeout(function(){a.fadeOut(function(){a.remove()})},6e3)},onStatusChange:function(e,r,o){var i=[],a=t.fineUploader("getUploads"),l=Array.isArray(a),s=0;for(a=l?a:a[Symbol.iterator]();;){var u;if(l){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var d=u;"upload successful"==d.status&&i.push(d.name)}n.val(i.join(", "))}},template:this.fineTemplate},this.classConfig);t.fineUploader(r)},o(n,null,[{key:"definition",get:function(){return{i18n:{default:"Fine Uploader"}}}}]),n}(i.default);n.default=a,i.default.register("file",i.default,"file"),i.default.register("fineuploader",a,"file")},function(t,n,r){n.__esModule=!0;var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=function(e){return e&&e.__esModule?e:{default:e}}(r(0));function a(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}var l=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,t.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,t),n.prototype.build=function(){var e=[],t=this.config,n=t.values,r=t.value,o=t.placeholder,i=t.type,l=t.inline,s=t.other,u=t.toggle,d=a(t,["values","value","placeholder","type","inline","other","toggle"]),f=i.replace("-group",""),c="select"===i;if((d.multiple||"checkbox-group"===i)&&(d.name=d.name+"[]"),"checkbox-group"===i&&d.required&&(this.onRender=this.groupRequired),delete d.title,n){o&&c&&e.push(this.markup("option",o,{disabled:null,selected:null}));for(var p=0;p<n.length;p++){var m=n[p];"string"==typeof m&&(m={label:m,value:m});var b=m,h=b.label,A=void 0===h?"":h;if((k=a(b,["label"])).id=d.id+"-"+p,k.selected&&!o||delete k.selected,void 0!==r&&k.value===r&&(k.selected=!0),c){var g=this.markup("option",document.createTextNode(A),k);e.push(g)}else{var y=[A],v="fb-"+f;l&&(v+="-inline"),k.type=f,k.selected&&(k.checked="checked",delete k.selected);var w=this.markup("input",null,Object.assign({},d,k)),C={for:k.id},x=[w,this.markup("label",y,C)];u&&(C.className="kc-toggle",y.unshift(w,this.markup("span")),x=this.markup("label",y,C));var B=this.markup("div",x,{className:v});e.push(B)}}if(!c&&s){var k,O={id:d.id+"-other",className:d.className+" other-option",value:""},q="fb-"+f;l&&(q+="-inline"),(k=Object.assign({},d,O)).type=f;var E={type:"text",events:{input:function(e){var t=e.target;t.parentElement.previousElementSibling.value=t.value}},id:O.id+"-value",className:"other-val"},j=this.markup("input",null,k),D=[document.createTextNode("Other"),this.markup("input",null,E)],L=this.markup("label",D,{for:k.id}),M=this.markup("div",[j,L],{className:q});e.push(M)}}return this.dom="select"==i?this.markup(f,e,d):this.markup("div",e,{className:i}),this.dom},n.prototype.groupRequired=function(){for(var e=this.element.getElementsByTagName("input"),t=function(e,t){[].forEach.call(e,function(e){t?e.removeAttribute("required"):e.setAttribute("required","required"),function(e,t){var n=i.default.mi18n("minSelectionRequired",1);t?e.setCustomValidity(""):e.setCustomValidity(n)}(e,t)})},n=function(){var n=[].some.call(e,function(e){return e.checked});t(e,n)},r=e.length-1;r>=0;r--)e[r].addEventListener("change",n);n()},n.prototype.onRender=function(){if(this.config.userData){var t=this.config.userData.slice();"select"===this.config.type?e(this.dom).val(t).prop("selected",!0):this.config.type.endsWith("-group")&&this.dom.querySelectorAll("input").forEach(function(e){if(!e.classList.contains("other-val")){for(var n=0;n<t.length;n++)if(e.value===t[n]){e.setAttribute("checked",!0),t.splice(n,1);break}if(e.id.endsWith("-other")){var r=document.getElementById(e.id+"-value");if(0===t.length)return;e.setAttribute("checked",!0),r.value=e.value=t[0],r.style.display="inline-block"}}})}},o(n,null,[{key:"definition",get:function(){return{inactive:["checkbox"],mi18n:{minSelectionRequired:"minSelectionRequired"}}}}]),n}(i.default);n.default=l,i.default.register(["select","checkbox-group","radio-group","checkbox"],l)},function(e,t,n){t.__esModule=!0;var r=i(n(0)),o=i(n(1));function i(e){return e&&e.__esModule?e:{default:e}}var a=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.build=function(){var e=this.config,t=e.type,n=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["type"]),r=t,i={paragraph:"p",header:this.subtype};return i[t]&&(r=i[t]),{field:this.markup(r,o.default.parsedHtml(this.label),n),layout:"noLabel"}},t}(r.default);t.default=a,r.default.register(["paragraph","header"],a),r.default.register(["p","address","blockquote","canvas","output"],a,"paragraph"),r.default.register(["h1","h2","h3","h4"],a,"header")},function(t,n,r){n.__esModule=!0;var o=function(e){return e&&e.__esModule?e:{default:e}}(r(0));var i=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,t.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,t),n.prototype.build=function(){return{field:this.markup("input",null,this.config),layout:"hidden"}},n.prototype.onRender=function(){this.config.userData&&e("#"+this.config.name).val(this.config.userData[0])},n}(o.default);n.default=i,o.default.register("hidden",i)},function(e,t,n){t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.build=function(){return{field:this.markup("list-layout","",{attrs:JSON.stringify(r({},this.config,{label:this.label}))}),layout:"noLabel"}},t}(o.default);t.default=i,o.default.register("button",i),o.default.register(["button","submit","reset"],i,"button"),o.default.registerElement("ListLayout","mmf")},function(e,t,n){t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));n(5);var a=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.build=function(){return{field:this.markup("auto-complete","",{attrs:JSON.stringify(r({},this.config,{label:this.label}))}),layout:"hidden"}},o(t,null,[{key:"definition",get:function(){return{mi18n:{requireValidOption:"requireValidOption"}}}}]),t}(i.default);t.default=a,i.default.register("autocomplete",a),i.default.registerElement("AutoComplete","buildingblock")},function(e,t,n){t.__esModule=!0;var r=m(n(19)),o=m(n(18)),i=m(n(4)),a=m(n(17)),l=m(n(16)),s=m(n(15)),u=m(n(6)),d=m(n(14)),f=m(n(3)),c=m(n(13)),p=m(n(12));function m(e){return e&&e.__esModule?e:{default:e}}t.default={controlAutocomplete:r.default,controlButton:o.default,controlCustom:i.default,controlHidden:a.default,controlParagraph:l.default,controlSelect:s.default,controlText:u.default,controlFineUploader:d.default,controlTextarea:f.default,controlTinymce:c.default,controlQuill:p.default}},function(e,t,n){t.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(e){return e&&e.__esModule?e:{default:e}}(n(1));var i=function(e,t){var n=e.id?"fb-"+e.type+" form-group field-"+e.id:"";if(e.className){var r=e.className.split(" ");(r=r.filter(function(e){return/^col-(xs|sm|md|lg)-([^\s]+)/.test(e)||e.startsWith("row-")}))&&r.length>0&&(n+=" "+r.join(" "));for(var o=0;o<r.length;o++){var i=r[o];t.classList.remove(i)}}return n},a=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.preview=n,this.templates={label:null,help:null,default:function(e,t,n,o){return n&&t.appendChild(n),r.markup("div",[t,e],{className:i(o,e)})},noLabel:function(e,t,n,o){return r.markup("div",e,{className:i(o,e)})},hidden:function(e,t,n,r){return e}},t&&(this.templates=jQuery.extend(this.templates,t)),this.configure()}return e.prototype.configure=function(){},e.prototype.build=function(e,t,n){this.preview&&(t.name?t.name=t.name+"-preview":t.name=o.default.nameAttr(t)+"-preview"),t.id=t.name,this.data=jQuery.extend({},t);var i=new e(t,this.preview),a=i.build();"object"===(void 0===a?"undefined":r(a))&&a.field||(a={field:a});var l=this.label(),s=this.help(),u=void 0;u=n&&this.isTemplate(n)?n:this.isTemplate(a.layout)?a.layout:"default";var d=this.processTemplate(u,a.field,l,s);return i.on("prerender")(d),d.addEventListener("fieldRendered",i.on("render")),d},e.prototype.label=function(){var e=this.data.label||"",t=[o.default.parsedHtml(e)];return this.data.required&&t.push(this.markup("span","*",{className:"fb-required"})),this.isTemplate("label")?this.processTemplate("label",t):this.markup("label",t,{for:this.data.id,className:"fb-"+this.data.type+"-label"})},e.prototype.help=function(){return this.data.description?this.isTemplate("help")?this.processTemplate("help",this.data.description):this.markup("span","?",{className:"tooltip-element",tooltip:this.data.description}):null},e.prototype.isTemplate=function(e){return"function"==typeof this.templates[e]},e.prototype.processTemplate=function(e){for(var t,n=arguments.length,r=Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];var i=(t=this.templates)[e].apply(t,r.concat([this.data]));return i.jquery&&(i=i[0]),i},e.prototype.markup=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return o.default.markup(e,t,n)},e}();t.default=a},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){t.__esModule=!0;var r=t.instanceData={};t.Data=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formData={},this.formID=t,this.layout="",r[t]=this},t.availablefields={}},function(e,t,n){var r=n(25).Symbol;e.exports=r},function(e,t,n){var r=n(43),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();e.exports=i},,,,,,,,function(e,t,n){t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{name:"",scope:"",tag:"",type:"React"},n=t.tag?t.tag:t.name.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),i=function(t){function o(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,t.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(o,t),o.prototype.build=function(){return{field:this.markup(n,"",{attrs:JSON.stringify(r({},this.config,{label:e}))}),layout:"hidden"}},o}(o.default);return o.default.register(e,i),o.default.registerElement(t.name,t.scope,t.type),i};var o=function(e){return e&&e.__esModule?e:{default:e}}(n(0))},function(e,t,n){t.__esModule=!0,n(20);var r=s(n(33)),o=s(n(0)),i=s(n(4)),a=n(1),l=n(5);function s(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(t,n){var a=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.opts=t,this.dom=n.controls,this.custom=i.default,this.getClass=o.default.getClass,this.addControl=function(){r.default.apply(void 0,arguments),a.appendControls()},this.getRegistered=o.default.getRegistered,o.default.registerComponentFn=t.registerComponentFn,o.default.controlConfig=t.controlConfig||{},this.init()}return e.prototype.init=function(){this.setupControls(),this.appendControls()},e.prototype.setupControls=function(){var e=this,t=this.opts;o.default.loadCustom(t.controls),Object.keys(t.fields).length&&i.default.register(t.templates,t.fields);var n=o.default.getRegistered();this.registeredControls=n;var r=i.default.getRegistered();r&&jQuery.merge(n,r),t.sortableControls&&this.dom.classList.add("sort-enabled"),this.controlList=[],this.allControls={};for(var l=0;l<n.length;l++){var s=n[l],u=i.default.lookup(s),d=void 0;if(u)d=u.class;else if(u={},!(d=o.default.getClass(s))||!d.active(s))continue;var f=u.icon||d.icon(s),c=u.label||d.label(s),p=f?"":u.iconClassName||"icon-"+s.replace(/-[\d]{4}$/,"");f&&(c='<span class="control-icon">'+f+"</span>"+c);var m=(0,a.markup)("li",(0,a.markup)("span",c),{className:p+" input-control input-control-"+l});m.dataset.type=s,this.controlList.push(s),this.allControls[s]=m}t.inputSets.length&&t.inputSets.forEach(function(t,n){var r=t.name,o=t.label;r=r||(0,a.hyphenCase)(o),t.icon&&(o='<span class="control-icon">'+t.icon+"</span>"+o);var i=(0,a.markup)("li",o,{className:"input-set-control input-set-"+n});i.dataset.type=r,e.controlList.push(r),e.allControls[r]=i})},e.prototype.orderFields=function(e){var t=this.opts,n=t.controlOrder.concat(e),r=void 0;return window.sessionStorage&&(t.sortableControls?r=window.sessionStorage.getItem("fieldOrder"):window.sessionStorage.removeItem("fieldOrder")),r?(r=window.JSON.parse(r),r=(0,a.unique)(r.concat(e)),r=Object.keys(r).map(function(e){return r[e]})):r=(0,a.unique)(n),r.forEach(function(e){var t=new RegExp("-[\\d]{4}$");if(e.match(t)){var n=r.indexOf(e.replace(t,""));-1!==n&&(r.splice(r.indexOf(e),1),r.splice(n+1,r.indexOf(e),e))}}),t.disableFields.length&&(r=r.filter(function(e){return-1==t.disableFields.indexOf(e)})),r.filter(Boolean)},e.prototype.appendControls=function(){var e=this;(0,l.empty)(this.dom),this.orderFields(this.controlList).forEach(function(t){var n=e.allControls[t];n&&e.dom.appendChild(n)})},e}();t.default=u},function(t,n,r){n.__esModule=!0;var o=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=p(r(2)),a=r(5),l=r(23),s=r(1),u=p(r(11)),d=r(10),f=p(r(0)),c=p(r(4));function p(e){return e&&e.__esModule?e:{default:e}}function m(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}var b=function(){function t(e,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.data=l.instanceData[e],this.d=a.instanceDom[e],this.doCancel=!1,this.layout=n,this.handleKeyDown=this.handleKeyDown.bind(this),this.formBuilder=r,this.rootElem=o}return t.prototype.startMoving=function(e,t){t.item.show().addClass("moving"),this.doCancel=!0,this.from=t.item.parent()},t.prototype.stopMoving=function(t,n){n.item.removeClass("moving"),this.doCancel&&(n.sender&&e(n.sender).sortable("cancel"),this.from.sortable("cancel")),this.save(),this.doCancel=!1},t.prototype.beforeStop=function(e,t){var n=d.config.opts,r=this.d.stage.childNodes.length-1,o=[];this.stopIndex=t.placeholder.index()-1,!n.sortableControls&&t.item.parent().hasClass("frmb-control")&&o.push(!0),n.prepend&&o.push(0===this.stopIndex),n.append&&o.push(this.stopIndex+1===r),this.doCancel=o.some(function(e){return!0===e})},t.prototype.getTypes=function(t){var n={type:t.attr("type")},r=e(".fld-subtype",t).val();return r!==n.type&&(n.subtype=r),n},t.prototype.fieldOptionData=function(t){var n=[],r=e(".sortable-options li",t);return r.each(function(t){var o=e(r[t]),i=e(".option-selected",o).is(":checked"),a={label:e(".option-label",o).val(),value:e(".option-value",o).val()};i&&(a.selected=i),n.push(a)}),n},t.prototype.xmlSave=function(e){var t=this.prepData(e),n=new XMLSerializer,r=["<fields>"];t.forEach(function(e){var t=e.values,n=m(e,["values"]),o=["<field "+(0,s.xmlAttrString)(n)+">"];if(a.optionFields.includes(e.type)){var i=t.map(function(e){return(0,s.markup)("option",e.label,e).outerHTML});o=o.concat(i)}o.push("</field>"),r.push(o)}),r.push("</fields>");var o=(0,s.markup)("form-template",(0,s.flattenArray)(r).join(""));return n.serializeToString(o)},t.prototype.prepData=function(t){var n=[],r=this.d,o=this;return 0!==t.childNodes.length&&(0,s.forEach)(t.childNodes,function(t,i){var a=e(i);if(!a.hasClass("disabled-field")){var l=o.getTypes(a),u=e(".roles-field:checked",i),d=u.map(function(e){return u[e].value}).get();if((l=Object.assign({},l,o.getAttrVals(i))).subtype)if("quill"===l.subtype){var f=l.name+"-preview";if(window.fbEditors.quill[f]){var c=window.fbEditors.quill[f].instance.getContents();l.value=window.JSON.stringify(c.ops)}}else if("tinymce"===l.subtype&&window.tinymce){var p=l.name+"-preview";if(window.tinymce.editors[p]){var m=window.tinymce.editors[p];l.value=m.getContent()}}if(d.length&&(l.role=d.join(",")),l.className=l.className||l.class,l.className){var b=/(?:^|\s)btn-(.*?)(?:\s|$)/g.exec(l.className);b&&(l.style=b[1])}(l=(0,s.trimObj)(l)).type&&l.type.match(r.optionFieldsRegEx)&&(l.values=o.fieldOptionData(a)),n.push(l)}}),n},t.prototype.getData=function(e){var t=this.data;if(e||(e=d.config.opts.formData),!e)return!1;var n={xml:function(e){return Array.isArray(e)?e:(0,s.parseXML)(e)},json:function(e){return"string"==typeof e?window.JSON.parse(e):e}};return t.formData=n[d.config.opts.dataType](e)||[],t.formData},t.prototype.save=function(e){var t=this,n=this.data,r=this.d.stage,o={xml:function(e){return t.xmlSave(r,e)},json:function(e){return window.JSON.stringify(t.prepData(r),null,e&&"  ")}};return n.formData=o[d.config.opts.dataType](e),document.dispatchEvent(u.default.formSaved),n.formData},t.prototype.incrementId=function(e){var t=e.lastIndexOf("-"),n=parseInt(e.substring(t+1))+1;return e.substring(0,t)+"-"+n},t.prototype.getAttrVals=function(t){var n=Object.create(null),r=t.querySelectorAll('[class*="fld-"]');return(0,s.forEach)(r,function(t){var i=r[t],a=(0,s.camelCase)(i.getAttribute("name")),l=[[i.attributes.contenteditable,function(){return"xml"===d.config.opts.dataType?(0,s.escapeHtml)(i.innerHTML):i.innerHTML}],["checkbox"===i.type,function(){return i.checked}],[i.attributes.multiple,function(){return e(i).val()}],[!0,function(){return i.value}]].find(function(e){return!!o(e,1)[0]})[1]();n[a]=l}),n},t.prototype.updatePreview=function(t){var n=this.d,r=t.attr("class"),o=t[0];if(!r.includes("input-control")){var i=t.attr("type"),l=e(".prev-holder",o),d=Object.assign({},this.getAttrVals(o,d),{type:i});i.match(n.optionFieldsRegEx)&&(d.values=[],d.multiple=e('[name="multiple"]',o).is(":checked"),e(".sortable-options li",o).each(function(t,n){var r={selected:e(".option-selected",n).is(":checked"),value:e(".option-value",n).val(),label:e(".option-label",n).val()};d.values.push(r)})),(d=(0,s.trimObj)(d)).className=this.classNames(o,d),t.data("fieldData",d);var p=c.default.lookup(d.type),m=p?p.class:f.default.getClass(d.type,d.subtype),b=this.layout.build(m,d);(0,a.empty)(l[0]),l[0].appendChild(b),b.dispatchEvent(u.default.fieldRendered)}},t.prototype.disabledTT=function(e){var t=e.querySelectorAll(".disabled-field");(0,s.forEach)(t,function(e){var n=t[e],r=i.default.get("fieldNonEditable");if(r){var o=(0,s.markup)("p",r,{className:"frmb-tt"});n.appendChild(o),n.addEventListener("mousemove",function(e){return function(e,t){var n=t.field.getBoundingClientRect(),r=e.clientX-n.left-21,o=e.clientY-n.top-t.tt.offsetHeight-12;t.tt.style.transform="translate("+r+"px, "+o+"px)"}(e,{tt:o,field:n})})}})},t.prototype.classNames=function(t,n){var r=t.querySelector(".fld-className"),o=t.querySelector(".btn-style"),i=o&&o.value;if(r){var a=n.type,l=r.multiple?e(r).val():r.value.trim().split(" "),u={button:"btn",submit:"btn"}[a];if(u&&i){for(var d=0;d<l.length;d++){var f=new RegExp("^"+u+"-.*","g");l[d].match(f)?l.splice(d,1,u+"-"+i):l.push(u+"-"+i)}l.push(u)}var c=(0,s.unique)(l).join(" ").trim();return r.value=c,c}},t.prototype.closeConfirm=function(t,n){t||(t=e(".form-builder-overlay",this.rootElem)[0]),t&&(0,a.remove)(t),n||(n=e(".form-builder-dialog",this.rootElem)[0]),n&&(0,a.remove)(n),document.removeEventListener("keydown",this.handleKeyDown,!1),document.dispatchEvent(u.default.modalClosed)},t.prototype.handleKeyDown=function(e){27===(e.keyCode||e.which)&&(e.preventDefault(),this.closeConfirm.call(this))},t.prototype.editorLayout=function(e){return{left:{stage:"pull-right",controls:"pull-left"},right:{stage:"pull-left",controls:"pull-right"}}[e]||""},t.prototype.showOverlay=function(){var e=this,t=(0,s.markup)("div",null,{className:"form-builder-overlay"});return document.body.appendChild(t),t.classList.add("visible"),t.addEventListener("click",function(t){var n=t.target;return e.closeConfirm(n)},!1),document.addEventListener("keydown",this.handleKeyDown,!1),t},t.prototype.confirm=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=this,a=i.default.current,l=o.showOverlay(),u=(0,s.markup)("button",a.yes,{className:"yes btn btn-success btn-sm"}),d=(0,s.markup)("button",a.no,{className:"no btn btn-danger btn-sm"});d.onclick=function(){o.closeConfirm(l)},u.onclick=function(){t(),o.closeConfirm(l)};var f=(0,s.markup)("div",[d,u],{className:"button-wrap"});r="form-builder-dialog "+r;var c=(0,s.markup)("div",[e,f],{className:r});if(n)c.classList.add("positioned");else{var p=document.documentElement;n={pageX:Math.max(p.clientWidth,window.innerWidth||0)/2,pageY:Math.max(p.clientHeight,window.innerHeight||0)/2},c.style.position="fixed"}return c.style.left=n.pageX+"px",c.style.top=n.pageY+"px",document.body.appendChild(c),u.focus(),c},t.prototype.dialog=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",r=document.documentElement.clientWidth,o=document.documentElement.clientHeight;this.showOverlay(),n="form-builder-dialog "+n;var i=(0,s.markup)("div",e,{className:n});return t?i.classList.add("positioned"):(t={pageX:Math.max(r,window.innerWidth||0)/2,pageY:Math.max(o,window.innerHeight||0)/2},i.style.position="fixed"),i.style.left=t.pageX+"px",i.style.top=t.pageY+"px",document.body.appendChild(i),document.dispatchEvent(u.default.modalOpened),-1!==n.indexOf("data-dialog")&&document.dispatchEvent(u.default.viewData),i},t.prototype.confirmRemoveAll=function(t){var n=this,r=t.target.id.match(/frmb-\d{13}/)[0],o=e("#"+r,this.rootElem)[0],a=i.default.current,l=e("li.form-field",o),s=t.target.getBoundingClientRect(),u=document.body.getBoundingClientRect(),f={pageX:s.left+s.width/2,pageY:s.top-u.top-12};l.length?n.confirm(a.clearAllMessage,function(){n.removeAllFields.call(n,o),d.config.opts.notify.success(a.allFieldsRemoved),d.config.opts.onClearAll()},f):n.dialog(a.noFieldsToClear,f)},t.prototype.removeAllFields=function(e){var t=this,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=i.default.current,o=d.config.opts,l=e.querySelectorAll("li.form-field"),u=[];if(!l.length)return!1;if(o.prepend&&u.push(!0),o.append&&u.push(!0),u.some(function(e){return!0===e})||(e.classList.add("empty"),e.dataset.content=r.getStarted),n){e.classList.add("removing");var f=0;(0,s.forEach)(l,function(e){return f+=l[e].offsetHeight+3}),l[0].style.marginTop=-f+"px",setTimeout(function(){(0,a.empty)(e).classList.remove("removing"),t.save()},400)}else(0,a.empty)(e),this.save()},t.prototype.setFieldOrder=function(t){if(!d.config.opts.sortableControls)return!1;var n=window,r=n.sessionStorage,o=n.JSON,i=[];return t.children().each(function(t,n){var r=e(n).data("type");r&&i.push(r)}),r&&r.setItem("fieldOrder",o.stringify(i)),i},t.prototype.closeAllEdit=function(){var t=e("> li.editing",this.d.stage),n=e(".toggle-form",this.d.stage),r=e(".frm-holder",t);n.removeClass("open"),t.removeClass("editing"),e(".prev-holder",t).show(),r.hide()},t.prototype.toggleEdit=function(t){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=e("#"+t,this.rootElem)[0],o=e(".frm-holder",r),i=e(".prev-holder",r);r.classList.toggle("editing"),e(".toggle-form",r).toggleClass("open"),n?(i.slideToggle(250),o.slideToggle(250)):(i.toggle(),o.toggle()),this.updatePreview(e(r)),r.classList.contains("editing")?(this.formBuilder.currentEditPanel=o[0],d.config.opts.onOpenFieldEdit(o[0]),document.dispatchEvent(u.default.fieldEditOpened)):(d.config.opts.onCloseFieldEdit(o[0]),document.dispatchEvent(u.default.fieldEditClosed))},t.prototype.getStyle=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=void 0;return window.getComputedStyle?n=window.getComputedStyle(e,null):e.currentStyle&&(n=e.currentStyle),t?n[t]:n},t.prototype.stickyControls=function(){var t=this.d,n=t.controls,r=t.stage,o=e(n).parent(),i=n.getBoundingClientRect(),a=r.getBoundingClientRect().top;e(window).scroll(function(t){var l=e(t.target).scrollTop(),s={top:5,bottom:"auto",right:"auto",left:i.left},u=Object.assign({},s,d.config.opts.stickyControls.offset);if(l>a){var f=Object.assign({position:"sticky"},u),c=n.getBoundingClientRect(),p=r.getBoundingClientRect(),m=c.top+c.height,b=p.top+p.height,h=m===b&&c.top>l;m>b&&c.top!==p.top&&o.css({position:"absolute",top:"auto",bottom:0,right:0,left:"auto"}),(m<b||h)&&o.css(f)}else n.parentElement.removeAttribute("style")})},t.prototype.showData=function(){var e=this.getFormData(d.config.opts.dataType,!0);"xml"===d.config.opts.dataType&&(e=(0,s.escapeHtml)(e));var t=(0,s.markup)("code",e,{className:"formData-"+d.config.opts.dataType});this.dialog((0,s.markup)("pre",t),null,"data-dialog")},t.prototype.removeField=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:250,r=!1,o=this,a=this.d.stage,l=a.getElementsByClassName("form-field");if(!l.length)return d.config.opts.notify.warning("No fields to remove"),!1;if(!t){var s=[].slice.call(l).map(function(e){return e.id});d.config.opts.notify.warning("fieldID required to remove specific fields."),d.config.opts.notify.warning("Removing last field since no ID was supplied."),d.config.opts.notify.warning("Available IDs: "+s.join(", ")),t=a.lastChild.id}var f=e("#"+t,this.rootElem)[0],c=e(f);if(!f)return d.config.opts.notify.warning("Field not found"),!1;c.slideUp(n,function(){c.removeClass("deleting"),c.remove(),r=!0,o.save(),a.childNodes.length||(a.classList.add("empty"),a.dataset.content=i.default.current.getStarted)});var p=d.config.opts.typeUserEvents[f.type];return p&&p.onremove&&p.onremove(f),document.dispatchEvent(u.default.fieldRemoved),r},t.prototype.processActionButtons=function(e){var t=e.label,n=e.events,r=m(e,["label","events"]),o=t,a=this.data;o=o?i.default.current[o]||o:r.id?i.default.current[r.id]||(0,s.capitalize)(r.id):"",r.id?r.id=a.formID+"-"+r.id+"-action":r.id=a.formID+"-action-"+Math.round(1e3*Math.random());var l=(0,s.markup)("button",o,r);if(n){var u=function(e){n.hasOwnProperty(e)&&l.addEventListener(e,function(t){return n[e](t)})};for(var d in n)u(d)}return l},t.prototype.processSubtypes=function(e){var t=d.config.opts.disabledSubtypes;for(var n in e)e.hasOwnProperty(n)&&f.default.register(e[n],f.default.getClass(n),n);var r=f.default.getRegisteredSubtypes(),i=Object.entries(r).reduce(function(e,n){var r=o(n,2),i=r[0],a=r[1];return e[i]=t[i]&&(0,s.subtract)(t[i],a)||a,e},{}),a={};for(var l in i)if(i.hasOwnProperty(l)){var u=[],c=i[l],p=Array.isArray(c),m=0;for(c=p?c:c[Symbol.iterator]();;){var b;if(p){if(m>=c.length)break;b=c[m++]}else{if((m=c.next()).done)break;b=m.value}var h=b,A=f.default.getClass(l,h),g=A.mi18n("subtype."+h)||A.mi18n(h)||h;u.push({label:g,value:h})}a[l]=u}return a},t.prototype.editorUI=function(e){var t=this.d,n=this.data,r=e||n.formID;t.editorWrap=(0,s.markup)("div",null,{id:n.formID+"-form-wrap",className:"form-wrap form-builder "+(0,s.mobileClass)()}),t.stage=(0,s.markup)("ul",null,{id:r,className:"frmb stage-wrap "+n.layout.stage}),t.controls=(0,s.markup)("ul",null,{id:r+"-control-box",className:"frmb-control"});var o=this.formActionButtons();t.formActions=(0,s.markup)("div",o,{className:"form-actions btn-group"})},t.prototype.formActionButtons=function(){var e=this,t=d.config.opts;return t.actionButtons.map(function(n){if(n.id&&-1===t.disabledActionButtons.indexOf(n.id))return e.processActionButtons(n)}).filter(Boolean)},t.prototype.processOptions=function(e){var t=this,n=e.actionButtons,r=e.replaceFields,o=m(e,["actionButtons","replaceFields"]),i=o.fieldEditContainer;"string"==typeof o.fieldEditContainer&&(i=document.querySelector(o.fieldEditContainer));var a=[{type:"button",id:"clear",className:"clear-all btn btn-danger",events:{click:t.confirmRemoveAll.bind(t)}},{type:"button",label:"viewJSON",id:"data",className:"btn btn-default get-data",events:{click:t.showData.bind(t)}},{type:"button",id:"save",className:"btn btn-primary save-template",events:{click:function(e){t.save(),d.config.opts.onSave(e,t.data.formData)}}}].concat(n);return o.fields=o.fields.concat(r),o.disableFields=o.disableFields.concat(r.map(function(e){var t=e.type;return t&&t})),"xml"===o.dataType&&(o.disableHTMLLabels=!0),d.config.opts=Object.assign({},{actionButtons:a},{fieldEditContainer:i},o),d.config.opts},t.prototype.input=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.markup)("input",null,e)},t.prototype.getFormData=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"js",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this;return{js:function(){return n.prepData(n.d.stage)},xml:function(){return n.xmlSave(n.d.stage)},json:function(e){return window.JSON.stringify(n.prepData(n.d.stage),null,e&&"  ")}}[e](t)},t}();n.default=b},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(24),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,l=r?r.toStringTag:void 0;e.exports=function(e){var t=i.call(e,l),n=e[l];try{e[l]=void 0;var r=!0}catch(e){}var o=a.call(e);return r&&(t?e[l]=n:delete e[l]),o}},function(e,t,n){var r=n(24),o=n(38),i=n(37),a="[object Null]",l="[object Undefined]",s=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?l:a:s&&s in Object(e)?o(e):i(e)}},function(e,t,n){var r=n(39),o=n(36),i="[object Symbol]";e.exports=function(e){return"symbol"==typeof e||o(e)&&r(e)==i}},function(e,t,n){var r=n(22),o=n(40),i=NaN,a=/^\s+|\s+$/g,l=/^[-+]0x[0-9a-f]+$/i,s=/^0b[01]+$/i,u=/^0o[0-7]+$/i,d=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(o(e))return i;if(r(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=r(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(a,"");var n=s.test(e);return n||u.test(e)?d(e.slice(2),n?2:8):l.test(e)?i:+e}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){(function(t){var n="object"==typeof t&&t&&t.Object===Object&&t;e.exports=n}).call(this,n(42))},function(e,t,n){var r=n(25);e.exports=function(){return r.Date.now()}},function(e,t,n){var r=n(22),o=n(44),i=n(41),a="Expected a function",l=Math.max,s=Math.min;e.exports=function(e,t,n){var u,d,f,c,p,m,b=0,h=!1,A=!1,g=!0;if("function"!=typeof e)throw new TypeError(a);function y(t){var n=u,r=d;return u=d=void 0,b=t,c=e.apply(r,n)}function v(e){var n=e-m;return void 0===m||n>=t||n<0||A&&e-b>=f}function w(){var e=o();if(v(e))return C(e);p=setTimeout(w,function(e){var n=t-(e-m);return A?s(n,f-(e-b)):n}(e))}function C(e){return p=void 0,g&&u?y(e):(u=d=void 0,c)}function x(){var e=o(),n=v(e);if(u=arguments,d=this,m=e,n){if(void 0===p)return function(e){return b=e,p=setTimeout(w,t),h?y(e):c}(m);if(A)return p=setTimeout(w,t),y(m)}return void 0===p&&(p=setTimeout(w,t)),c}return t=i(t)||0,r(n)&&(h=!!n.leading,f=(A="maxWait"in n)?l(i(n.maxWait)||0,t):f,g="trailing"in n?!!n.trailing:g),x.cancel=function(){void 0!==p&&clearTimeout(p),b=0,u=m=d=p=void 0},x.flush=function(){return void 0===p?c:C(o())},x}},function(e,t,n){var r=n(45),o=n(22),i="Expected a function";e.exports=function(e,t,n){var a=!0,l=!0;if("function"!=typeof e)throw new TypeError(i);return o(n)&&(a="leading"in n?!!n.leading:a,l="trailing"in n?!!n.trailing:l),r(e,t,{leading:a,maxWait:t,trailing:l})}},function(e,t,n){(e.exports=n(9)(!0)).push([e.i,'@font-face{font-family:fb-icons;src:url("data:application/octet-stream;base64,") format("woff")}[class*=" icon-"]:before,[class^=icon-]:before{font-family:fb-icons;font-style:normal;font-weight:400;speak:none;display:inline-block;text-decoration:inherit;width:1em;margin-right:.2em;text-align:center;font-variant:normal;text-transform:none;line-height:1em;margin-left:.2em}.icon-autocomplete:before{content:"\\E800"}.icon-date:before{content:"\\E801"}.icon-checkbox:before{content:"\\E802"}.icon-checkbox-group:before{content:"\\E803"}.icon-radio-group:before{content:"\\E804"}.icon-rich-text:before{content:"\\E805"}.icon-select:before{content:"\\E806"}.icon-textarea:before{content:"\\E807"}.icon-text:before{content:"\\E808"}.icon-pencil:before{content:"\\E809"}.icon-file:before{content:"\\E80A"}.icon-hidden:before{content:"\\E80B"}.icon-cancel:before{content:"\\E80C"}.icon-button:before{content:"\\E80D"}.icon-header:before{content:"\\E80F"}.icon-paragraph:before{content:"\\E810"}.icon-number:before{content:"\\E811"}.icon-copy:before{content:"\\F24D"}.form-wrap.form-builder{position:relative}.form-wrap.form-builder *{box-sizing:border-box}.form-wrap.form-builder input{line-height:normal}.form-wrap.form-builder textarea{overflow:auto}.form-wrap.form-builder button,.form-wrap.form-builder input,.form-wrap.form-builder select,.form-wrap.form-builder textarea{font-family:inherit;font-size:inherit;line-height:inherit}.form-wrap.form-builder .btn-group{position:relative;display:inline-block;vertical-align:middle}.form-wrap.form-builder .btn-group>.btn{position:relative;float:left}.form-wrap.form-builder .btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.form-wrap.form-builder .btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.form-wrap.form-builder .btn-group .btn+.btn,.form-wrap.form-builder .btn-group .btn+.btn-group,.form-wrap.form-builder .btn-group .btn-group+.btn,.form-wrap.form-builder .btn-group .btn-group+.btn-group{margin-left:-1px}.form-wrap.form-builder .btn-group .input-group-addon:last-child,.form-wrap.form-builder .btn-group .input-group-btn:first-child>.btn-group:not(:first-child)>.btn,.form-wrap.form-builder .btn-group .input-group-btn:first-child>.btn:not(:first-child),.form-wrap.form-builder .btn-group .input-group-btn:last-child>.btn,.form-wrap.form-builder .btn-group .input-group-btn:last-child>.btn-group>.btn,.form-wrap.form-builder .btn-group .input-group-btn:last-child>.dropdown-toggle,.form-wrap.form-builder .btn-group .input-group .form-control:last-child,.form-wrap.form-builder .btn-group>.btn:last-child:not(:first-child),.form-wrap.form-builder .btn-group>.dropdown-toggle:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.form-wrap.form-builder .btn-group>.btn.active,.form-wrap.form-builder .btn-group>.btn:active,.form-wrap.form-builder .btn-group>.btn:focus,.form-wrap.form-builder .btn-group>.btn:hover{z-index:2}.form-wrap.form-builder .btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border-radius:4px}.form-wrap.form-builder .btn.btn-lg{padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.form-wrap.form-builder .btn.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.form-wrap.form-builder .btn.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.form-wrap.form-builder .btn.active,.form-wrap.form-builder .btn.btn-active,.form-wrap.form-builder .btn:active{background-image:none}.form-wrap.form-builder .input-group-addon:last-child,.form-wrap.form-builder .input-group-btn:first-child>.btn-group:not(:first-child)>.btn,.form-wrap.form-builder .input-group-btn:first-child>.btn:not(:first-child),.form-wrap.form-builder .input-group-btn:last-child>.btn,.form-wrap.form-builder .input-group-btn:last-child>.btn-group>.btn,.form-wrap.form-builder .input-group-btn:last-child>.dropdown-toggle,.form-wrap.form-builder .input-group .form-control:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.form-wrap.form-builder .input-group-addon,.form-wrap.form-builder .input-group-btn,.form-wrap.form-builder .input-group .form-control{display:table-cell}.form-wrap.form-builder .input-group-lg>.form-control,.form-wrap.form-builder .input-group-lg>.input-group-addon,.form-wrap.form-builder .input-group-lg>.input-group-btn>.btn{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333}.form-wrap.form-builder .input-group{position:relative;display:table;border-collapse:separate}.form-wrap.form-builder .input-group .form-control{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.form-wrap.form-builder .form-control,.form-wrap.form-builder output{font-size:14px;line-height:1.42857143;display:block}.form-wrap.form-builder textarea.form-control{height:auto}.form-wrap.form-builder .form-control{height:34px;display:block;width:100%;padding:6px 12px;font-size:14px;line-height:1.42857143;border-radius:4px}.form-wrap.form-builder .form-control:focus{outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.form-wrap.form-builder .form-group{margin-left:0;margin-bottom:15px}.form-wrap.form-builder .btn,.form-wrap.form-builder .form-control{background-image:none}.form-wrap.form-builder .pull-right{float:right}.form-wrap.form-builder .pull-left{float:left}.form-wrap.form-builder .fb-required,.form-wrap.form-builder .required-asterisk{color:#c10000}.form-wrap.form-builder .fb-checkbox-group input[type=checkbox],.form-wrap.form-builder .fb-checkbox-group input[type=radio],.form-wrap.form-builder .fb-radio-group input[type=checkbox],.form-wrap.form-builder .fb-radio-group input[type=radio]{margin:0 4px 0 0}.form-wrap.form-builder .fb-checkbox-inline,.form-wrap.form-builder .fb-radio-inline{margin-right:8px;display:inline-block;vertical-align:middle;padding-left:0}.form-wrap.form-builder .fb-checkbox-inline label input[type=text],.form-wrap.form-builder .fb-radio-inline label input[type=text]{margin-top:0}.form-wrap.form-builder .fb-checkbox-inline:first-child,.form-wrap.form-builder .fb-radio-inline:first-child{padding-left:0}.form-wrap.form-builder .fb-autocomplete-list{background-color:#fff;display:none;list-style:none;padding:0;border:1px solid #ccc;border-width:0 1px 1px;position:absolute;z-index:20;max-height:200px;overflow-y:auto}.form-wrap.form-builder .fb-autocomplete-list li{display:none;cursor:default;padding:5px;margin:0;transition:background-color .2s ease-in-out}.form-wrap.form-builder .fb-autocomplete-list li.active-option,.form-wrap.form-builder .fb-autocomplete-list li:hover{background-color:rgba(0,0,0,.075)}.form-wrap.form-builder .cb-wrap{width:26%;transition:transform .25s}.form-wrap.form-builder .cb-wrap.pull-left .form-actions{float:left}.form-wrap.form-builder .cb-wrap h4{margin-top:0;color:#666}@media (max-width:481px){.form-wrap.form-builder .cb-wrap{width:64px}.form-wrap.form-builder .cb-wrap h4{display:none}}.form-wrap.form-builder .frmb-control{margin:0;padding:0;border-radius:5px}.form-wrap.form-builder .frmb-control li{cursor:move;list-style:none;margin:0 0 -1px;padding:10px;text-align:left;background:#fff;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;box-shadow:inset 0 0 0 1px #c5c5c5}.form-wrap.form-builder .frmb-control li .control-icon{width:16px;height:auto;margin-right:10px;margin-left:.2em;display:inline-block}.form-wrap.form-builder .frmb-control li .control-icon img,.form-wrap.form-builder .frmb-control li .control-icon svg{max-width:100%;height:auto}.form-wrap.form-builder .frmb-control li:first-child{border-radius:5px 5px 0 0;margin-top:0}.form-wrap.form-builder .frmb-control li:last-child{border-radius:0 0 5px 5px}.form-wrap.form-builder .frmb-control li:before{margin-right:10px;font-size:16px}.form-wrap.form-builder .frmb-control li:hover{background-color:#f2f2f2}.form-wrap.form-builder .frmb-control li.ui-sortable-helper{border-radius:5px;transition:box-shadow .25s;box-shadow:2px 2px 6px 0 #666;border:1px solid #fff}.form-wrap.form-builder .frmb-control li.ui-state-highlight{width:0;overflow:hidden;padding:0;margin:0;border:0 none}.form-wrap.form-builder .frmb-control li.moving{opacity:.6}.form-wrap.form-builder .frmb-control li.fb-separator{background-color:transparent;box-shadow:none;padding:0;cursor:default}.form-wrap.form-builder .frmb-control li.fb-separator hr{margin:10px 0}@media (max-width:481px){.form-wrap.form-builder .frmb-control li:before{font-size:30px}.form-wrap.form-builder .frmb-control li span{display:none}}.form-wrap.form-builder .frmb-control.sort-enabled li.ui-state-highlight{box-shadow:none;height:0;width:100%;background:radial-gradient(ellipse at center,#545454 0,transparent 75%);border:0 none;-webkit-clip-path:polygon(50% 0,100% 50%,50% 100%,0 50%);clip-path:polygon(50% 0,100% 50%,50% 100%,0 50%);visibility:visible;overflow:hidden;margin:1px 0 3px;animation:PLACEHOLDER .25s forwards}.form-wrap.form-builder .fb-mobile .form-actions{width:100%}.form-wrap.form-builder .fb-mobile .form-actions button{width:100%;font-size:.85em!important;display:block!important;border-radius:0!important;margin-top:-1px;margin-left:0!important}.form-wrap.form-builder .fb-mobile .form-actions button:first-child{border-radius:5px 5px 0 0!important;margin-top:0!important;border-bottom:0 none}.form-wrap.form-builder .fb-mobile .form-actions button:last-child{border-radius:0 0 5px 5px!important}.form-wrap.form-builder .form-actions{float:right;margin-top:5px}.form-wrap.form-builder .form-actions button{border:0 none}.form-wrap.form-builder .stage-wrap{position:relative;padding:0;margin:0;width:calc(74% - 5px)}@media (max-width:481px){.form-wrap.form-builder .stage-wrap{width:calc(100% - 64px)}}.form-wrap.form-builder .stage-wrap.empty{border:3px dashed #ccc;background-color:hsla(0,0%,100%,.25)}.form-wrap.form-builder .stage-wrap.empty:after{content:attr(data-content);position:absolute;text-align:center;top:50%;left:0;width:100%;margin-top:-1em}.form-wrap.form-builder .frmb{list-style-type:none;min-height:200px;transition:background-color .5s ease-in-out}.form-wrap.form-builder .frmb .fb-required{color:#c10000}.form-wrap.form-builder .frmb.removing{overflow:hidden}.form-wrap.form-builder .frmb>li:hover{border-color:#66afe9;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.1),0 0 8px rgba(102,175,233,.6)}.form-wrap.form-builder .frmb>li:hover .field-actions{opacity:1}.form-wrap.form-builder .frmb>li:hover li :hover{background:#fefefe}.form-wrap.form-builder .frmb li{position:relative;padding:6px;clear:both;margin-left:0;margin-bottom:3px;background-color:#fff;transition:background-color .25s ease-in-out,margin-top .4s}.form-wrap.form-builder .frmb li.hidden-field{background-color:hsla(0,0%,100%,.6)}.form-wrap.form-builder .frmb li:first-child{border-top-right-radius:5px;border-top-left-radius:5px}.form-wrap.form-builder .frmb li:first-child .field-actions .btn:last-child{border-radius:0 5px 0 0}.form-wrap.form-builder .frmb li:last-child{border-bottom-right-radius:5px;border-bottom-left-radius:5px}.form-wrap.form-builder .frmb li.no-fields label{font-weight:400}@keyframes PLACEHOLDER{0%{height:0}to{height:15px}}.form-wrap.form-builder .frmb li.frmb-placeholder,.form-wrap.form-builder .frmb li.ui-state-highlight{height:0;padding:0;background:radial-gradient(ellipse at center,#545454 0,transparent 75%);border:0 none;-webkit-clip-path:polygon(50% 0,100% 50%,50% 100%,0 50%);clip-path:polygon(50% 0,100% 50%,50% 100%,0 50%);visibility:visible;overflow:hidden;margin-bottom:3px;animation:PLACEHOLDER .25s forwards}.form-wrap.form-builder .frmb li.moving,.form-wrap.form-builder .frmb li.ui-sortable-helper{transition:box-shadow .5s ease-in-out;box-shadow:2px 2px 6px 0 #666;border:1px solid #fff;border-radius:5px}.form-wrap.form-builder .frmb li.disabled-field{z-index:1;position:relative;overflow:visible}.form-wrap.form-builder .frmb li.disabled-field:hover .frmb-tt{display:inline-block}.form-wrap.form-builder .frmb li.disabled-field [type=checkbox]{float:left;margin-right:10px}.form-wrap.form-builder .frmb li.disabled-field h2{border-bottom:0 none}.form-wrap.form-builder .frmb li.disabled-field label{font-size:12px;font-weight:400;color:#666}.form-wrap.form-builder .frmb li.disabled-field .prev-holder{cursor:default;line-height:28px;padding-left:5px}.form-wrap.form-builder .frmb li .close-field{position:absolute;color:#666;left:50%;bottom:6px;background:#fff;border-top:1px solid #c5c5c5;border-left:1px solid #c5c5c5;border-right:1px solid #c5c5c5;transform:translateX(-50%);padding:0 5px;border-top-right-radius:3px;border-top-left-radius:3px;cursor:pointer;transition:background-color .25s ease-in-out}.form-wrap.form-builder .frmb li .close-field:hover{text-decoration:none}.form-wrap.form-builder .frmb li.button-field .prev-holder,.form-wrap.form-builder .frmb li.button-field address,.form-wrap.form-builder .frmb li.button-field blockquote,.form-wrap.form-builder .frmb li.button-field canvas,.form-wrap.form-builder .frmb li.button-field h1,.form-wrap.form-builder .frmb li.button-field h2,.form-wrap.form-builder .frmb li.button-field h3,.form-wrap.form-builder .frmb li.button-field output,.form-wrap.form-builder .frmb li.button-field p,.form-wrap.form-builder .frmb li.header-field .prev-holder,.form-wrap.form-builder .frmb li.header-field address,.form-wrap.form-builder .frmb li.header-field blockquote,.form-wrap.form-builder .frmb li.header-field canvas,.form-wrap.form-builder .frmb li.header-field h1,.form-wrap.form-builder .frmb li.header-field h2,.form-wrap.form-builder .frmb li.header-field h3,.form-wrap.form-builder .frmb li.header-field output,.form-wrap.form-builder .frmb li.header-field p,.form-wrap.form-builder .frmb li.paragraph-field .prev-holder,.form-wrap.form-builder .frmb li.paragraph-field address,.form-wrap.form-builder .frmb li.paragraph-field blockquote,.form-wrap.form-builder .frmb li.paragraph-field canvas,.form-wrap.form-builder .frmb li.paragraph-field h1,.form-wrap.form-builder .frmb li.paragraph-field h2,.form-wrap.form-builder .frmb li.paragraph-field h3,.form-wrap.form-builder .frmb li.paragraph-field output,.form-wrap.form-builder .frmb li.paragraph-field p{margin:0}.form-wrap.form-builder .frmb li.button-field .field-label,.form-wrap.form-builder .frmb li.header-field .field-label,.form-wrap.form-builder .frmb li.paragraph-field .field-label{display:none}.form-wrap.form-builder .frmb li.button-field.editing .field-label,.form-wrap.form-builder .frmb li.header-field.editing .field-label,.form-wrap.form-builder .frmb li.paragraph-field.editing .field-label{display:block}.form-wrap.form-builder .frmb li.paragraph-field .fld-label{min-height:150px;overflow-y:auto}.form-wrap.form-builder .frmb li.checkbox-field .field-label{display:none}.form-wrap.form-builder .frmb li.delete:hover,.form-wrap.form-builder .frmb li.delete:hover .close-field,.form-wrap.form-builder .frmb li.deleting,.form-wrap.form-builder .frmb li.deleting .close-field,.form-wrap.form-builder .frmb li:hover li.delete:hover,.form-wrap.form-builder .frmb li:hover li.delete:hover .close-field{background-color:#fdd}.form-wrap.form-builder .frmb li.deleting{z-index:20;pointer-events:none}.form-wrap.form-builder .frmb.disabled-field{padding:0 5px}.form-wrap.form-builder .frmb.disabled-field :hover{border-color:transparent}.form-wrap.form-builder .frmb.disabled-field .form-element{float:none;margin-bottom:10px;overflow:visible;padding:5px 0;position:relative}.form-wrap.form-builder .frmb .frm-holder{display:none}.form-wrap.form-builder .frmb .tooltip{left:20px}.form-wrap.form-builder .frmb .prev-holder{display:block}.form-wrap.form-builder .frmb .prev-holder .form-group{margin:0}.form-wrap.form-builder .frmb .prev-holder .ql-editor{min-height:125px}.form-wrap.form-builder .frmb .prev-holder .form-group>label:not([class=fb-checkbox-label]){display:none}.form-wrap.form-builder .frmb .prev-holder input[type=number],.form-wrap.form-builder .frmb .prev-holder input[type=text],.form-wrap.form-builder .frmb .prev-holder select,.form-wrap.form-builder .frmb .prev-holder textarea{background-color:#fff;border:1px solid #ccc;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.form-wrap.form-builder .frmb .prev-holder input[type=date]{width:auto}.form-wrap.form-builder .frmb .prev-holder select[multiple]{height:auto}.form-wrap.form-builder .frmb .prev-holder label{font-weight:400}.form-wrap.form-builder .frmb .prev-holder input[type=number]{width:auto}.form-wrap.form-builder .frmb .prev-holder input[type=color]{width:60px;padding:2px;display:inline-block}.form-wrap.form-builder .frmb .required-asterisk{display:none}.form-wrap.form-builder .frmb .field-label,.form-wrap.form-builder .frmb .legend{color:#666;margin-bottom:5px;line-height:27px;font-size:16px;font-weight:400}.form-wrap.form-builder .frmb .disabled-field .field-label{display:block}.form-wrap.form-builder .frmb .other-option:checked+label input{display:inline-block}.form-wrap.form-builder .frmb .other-val{margin-left:5px;display:none}.form-wrap.form-builder .frmb .field-actions{position:absolute;top:0;right:0;opacity:0}.form-wrap.form-builder .frmb .field-actions a:before{margin:0}.form-wrap.form-builder .frmb .field-actions a:hover{text-decoration:none;color:#000}.form-wrap.form-builder .frmb .field-actions .btn{display:inline-block;width:32px;height:32px;padding:0 6px;border-radius:0;border-color:#c5c5c5;background-color:#fff;color:#c5c5c5;line-height:32px;font-size:16px;border-width:0 0 1px 1px}.form-wrap.form-builder .frmb .field-actions .btn:first-child{border-bottom-left-radius:5px}.form-wrap.form-builder .frmb .field-actions .toggle-form:hover{background-color:#65aac6;color:#fff}.form-wrap.form-builder .frmb .field-actions .copy-button:hover{background-color:#6fc665;color:#fff}.form-wrap.form-builder .frmb .field-actions .del-button:hover{background-color:#c66865;color:#fff}.form-wrap.form-builder .frmb .option-actions{text-align:right;margin-top:10px;width:100%;margin-left:2%}.form-wrap.form-builder .frmb .option-actions a,.form-wrap.form-builder .frmb .option-actions button{background:#fff;padding:5px 10px;border:1px solid #c5c5c5;font-size:14px;border-radius:5px;cursor:default}.form-wrap.form-builder .frmb .sortable-options-wrap{width:81.33333333%;display:inline-block}.form-wrap.form-builder .frmb .sortable-options-wrap label{font-weight:400}@media (max-width:481px){.form-wrap.form-builder .frmb .sortable-options-wrap{display:block;width:100%}}.form-wrap.form-builder .frmb .sortable-options{display:inline-block;width:100%;margin-left:2%;background:#c5c5c5;margin-bottom:0;border-radius:5px;list-style:none;padding:0}.form-wrap.form-builder .frmb .sortable-options>li{cursor:move;margin:1px}.form-wrap.form-builder .frmb .sortable-options>li:first-child .remove,.radio-group-field .form-wrap.form-builder .frmb .sortable-options>li:nth-child(2) .remove{display:none}.form-wrap.form-builder .frmb .sortable-options>li .remove{position:absolute;opacity:1;right:14px;height:18px;width:18px;top:14px;font-size:12px;padding:0;color:#c10000}.form-wrap.form-builder .frmb .sortable-options>li .remove:before{margin:0}.form-wrap.form-builder .frmb .sortable-options>li .remove:hover{background-color:#c10000;text-decoration:none;color:#fff}.form-wrap.form-builder .frmb .sortable-options .option-selected{margin:0;width:5%}.form-wrap.form-builder .frmb .sortable-options input[type=text]{width:calc(44.5% - 17px);margin:0 1%;float:none}.form-wrap.form-builder .frmb .form-field .form-group{width:100%;clear:left;float:none}.form-wrap.form-builder .frmb .col-md-6 .form-elements,.form-wrap.form-builder .frmb .col-md-8 .form-elements{width:100%}.form-wrap.form-builder .frmb .field-options .add-area .add{clear:both}.form-wrap.form-builder .frmb .style-wrap button.selected{border:1px solid #000;margin-top:0;margin-right:1px;box-shadow:inset 0 0 0 1px #fff;padding:1px 5px}.form-wrap.form-builder .frmb .form-elements{padding:10px 5px;background:#f7f7f7;border-radius:3px;margin:0;border:1px solid #c5c5c5}.form-wrap.form-builder .frmb .form-elements .input-wrap{width:81.33333333%;margin-left:2%;float:left}.form-wrap.form-builder .frmb .form-elements .input-wrap>input[type=checkbox]{margin-top:8px}.form-wrap.form-builder .frmb .form-elements .add{clear:both}.form-wrap.form-builder .frmb .form-elements [contenteditable],.form-wrap.form-builder .frmb .form-elements select[multiple]{height:auto}.form-wrap.form-builder .frmb .form-elements [contenteditable].form-control,.form-wrap.form-builder .frmb .form-elements input[type=color],.form-wrap.form-builder .frmb .form-elements input[type=date],.form-wrap.form-builder .frmb .form-elements input[type=number],.form-wrap.form-builder .frmb .form-elements input[type=text],.form-wrap.form-builder .frmb .form-elements select,.form-wrap.form-builder .frmb .form-elements textarea{transition:background .25s ease-in-out;padding:6px 12px;border:1px solid #c5c5c5;background-color:#fff}@media (max-width:481px){.form-wrap.form-builder .frmb .form-elements .input-wrap{width:100%;margin-left:0;float:none}}.form-wrap.form-builder .frmb .form-elements input[type=number]{width:auto}.form-wrap.form-builder .frmb .form-elements .btn-group{margin-left:2%}.col-md-6 .form-wrap.form-builder .frmb .form-elements .false-label,.col-md-6 .form-wrap.form-builder .frmb .form-elements label,.col-md-8 .form-wrap.form-builder .frmb .form-elements .false-label,.col-md-8 .form-wrap.form-builder .frmb .form-elements label{display:block}.form-wrap.form-builder .frmb .form-elements .false-label:first-child,.form-wrap.form-builder .frmb .form-elements label:first-child{width:16.66666667%;padding-top:7px;margin-bottom:0;text-align:right;font-weight:700;float:left;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-transform:capitalize}@media (max-width:481px){.form-wrap.form-builder .frmb .form-elements .false-label:first-child,.form-wrap.form-builder .frmb .form-elements label:first-child{display:block;width:auto;float:none;text-align:left}.form-wrap.form-builder .frmb .form-elements .false-label:first-child.empty-label,.form-wrap.form-builder .frmb .form-elements label:first-child.empty-label{display:none}}.form-wrap.form-builder .frmb .form-elements .false-label.multiple,.form-wrap.form-builder .frmb .form-elements .false-label.other-label,.form-wrap.form-builder .frmb .form-elements .false-label.required-label,.form-wrap.form-builder .frmb .form-elements .false-label.roles-label,.form-wrap.form-builder .frmb .form-elements .false-label.toggle-label,.form-wrap.form-builder .frmb .form-elements label.multiple,.form-wrap.form-builder .frmb .form-elements label.other-label,.form-wrap.form-builder .frmb .form-elements label.required-label,.form-wrap.form-builder .frmb .form-elements label.roles-label,.form-wrap.form-builder .frmb .form-elements label.toggle-label{text-align:left;float:none;margin-bottom:-3px;font-weight:400;width:calc(81.3333% - 23px)}.form-wrap.form-builder .frmb .form-elements input.error{border:1px solid #c10000}.form-wrap.form-builder .frmb .form-elements input.fld-maxlength{width:75px}.form-wrap.form-builder .frmb .form-elements input.field-error{background:#fefefe;border:1px solid #c5c5c5}.form-wrap.form-builder .frmb .form-elements label em{display:block;font-weight:400;font-size:.75em}.form-wrap.form-builder .frmb .form-elements label.maxlength-label{line-height:1em}.form-wrap.form-builder .frmb .form-elements .available-roles{display:none;padding:10px;margin:10px 0;background:#e6e6e6;box-shadow:inset 0 0 2px 0 #b3b3b3}@media (max-width:481px){.form-wrap.form-builder .frmb .form-elements .available-roles{margin-left:0}}.form-wrap.form-builder .frmb .form-elements .available-roles label{font-weight:400;width:auto;float:none;display:inline}.form-wrap.form-builder .frmb .form-elements .available-roles input{display:inline;top:auto}.form-wrap.form-builder .autocomplete-field .sortable-options .option-selected{display:none}.form-wrap.form-builder .fb-mobile .field-actions{opacity:1}.form-wrap.form-builder [tooltip]{position:relative}.form-wrap.form-builder [tooltip]:hover:after{background:rgba(0,0,0,.9);border-radius:5px 5px 5px 0;bottom:23px;color:#fff;content:attr(tooltip);padding:10px 5px;position:absolute;z-index:98;left:2px;width:230px;text-shadow:none;font-size:12px;line-height:1.5em;cursor:default}.form-wrap.form-builder [tooltip]:hover:before{border:solid;border-color:#222 transparent;border-width:6px 6px 0;bottom:17px;content:"";left:2px;position:absolute;z-index:99;cursor:default}.form-wrap.form-builder .tooltip-element{visibility:visible;color:#fff;background:#000;width:16px;height:16px;border-radius:8px;display:inline-block;text-align:center;line-height:16px;margin:0 5px;font-size:12px;cursor:default}.form-wrap.form-builder .kc-toggle{padding-left:0!important}.form-wrap.form-builder .kc-toggle span{position:relative;width:48px;height:24px;background:#e6e6e6;display:inline-block;border-radius:4px;border:1px solid #ccc;padding:2px;overflow:hidden;float:left;margin-right:5px;will-change:transform}.form-wrap.form-builder .kc-toggle span:after,.form-wrap.form-builder .kc-toggle span:before{position:absolute;display:inline-block;top:0}.form-wrap.form-builder .kc-toggle span:after{position:relative;content:"";width:50%;height:100%;left:0;border-radius:3px;background:linear-gradient(180deg,#fff 0,#ccc);border:1px solid #999;transition:transform .1s;transform:translateX(0)}.form-wrap.form-builder .kc-toggle span:before{border-radius:4px;top:2px;left:2px;content:"";width:calc(100% - 4px);height:18px;box-shadow:inset 0 0 1px 1px #b3b3b3;background-color:transparent}.form-wrap.form-builder .kc-toggle input{height:0;overflow:hidden;width:0;opacity:0;pointer-events:none;margin:0}.form-wrap.form-builder .kc-toggle input:checked+span:after{transform:translateX(100%)}.form-wrap.form-builder .kc-toggle input:checked+span:before{background-color:#6fc665}.form-wrap.form-builder:after{content:"";display:table;clear:both}.cb-wrap,.stage-wrap{vertical-align:top}.cb-wrap.pull-right,.stage-wrap.pull-right{float:right}.cb-wrap.pull-left,.stage-wrap.pull-left{float:left}.form-elements,.form-group,.multi-row span,textarea{display:block}.form-elements:after,.form-group:after{content:".";display:block;height:0;clear:both;visibility:hidden}.form-elements .field-options div:hover,.frmb .legend,.frmb .prev-holder{cursor:move}.frmb-tt{display:none;position:absolute;top:0;left:0;border:1px solid #262626;background-color:#666;border-radius:5px;padding:5px;color:#fff;z-index:20;text-align:left;font-size:12px;pointer-events:none}.frmb-tt:before{border-color:#262626 transparent;bottom:-11px}.frmb-tt:after,.frmb-tt:before{content:"";position:absolute;border-style:solid;border-width:10px 10px 0;border-color:#666 transparent;display:block;width:0;z-index:1;margin-left:-10px;bottom:-10px;left:20px}.frmb-tt a{text-decoration:underline;color:#fff}.fb-mobile .frmb li .del-button,.fb-mobile .frmb li .toggle-form,.frmb li:hover .del-button,.frmb li:hover .toggle-form{opacity:1}.frmb-xml .ui-dialog-content{white-space:pre-wrap;word-wrap:break-word;font-size:12px;padding:0 30px;margin-top:0}.toggle-form{opacity:0}.toggle-form:hover{border-color:#ccc}.toggle-form:before{margin:0}.formb-field-vars .copy-var{display:inline-block;width:24px;height:24px;background:#b3b3b3;text-indent:-9999px}.ui-button .ui-button-text{line-height:0}.form-builder-overlay{position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);display:none;z-index:10}.form-builder-overlay.visible{display:block}.form-builder-dialog{position:absolute;border-radius:5px;background:#fff;z-index:20;transform:translate(-50%,-50%);top:0;left:0;padding:10px;box-shadow:0 3px 10px #000;min-width:166px;max-height:80%;overflow-y:scroll}.form-builder-dialog h3{margin-top:0}.form-builder-dialog.data-dialog{width:65%;background-color:#23241f}.form-builder-dialog.data-dialog pre{background:none;border:0 none;box-shadow:none;margin:0;color:#f2f2f2}.form-builder-dialog.positioned{transform:translate(-50%,-100%)}.form-builder-dialog.positioned .button-wrap:before{content:"";width:0;height:0;border-left:15px solid transparent;border-right:15px solid transparent;border-top:10px solid #fff;position:absolute;left:50%;top:100%;transform:translate(-50%,10px)}.form-builder-dialog .button-wrap{position:relative;margin-top:10px;text-align:right;clear:both}.form-builder-dialog .button-wrap .btn{margin-left:10px}',"",{version:3,sources:["/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/base/_font.scss","/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/form-builder.scss","/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/base/_bs.scss","/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/base/_variables.scss","/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/_controls.scss","/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/base/_mixins.scss","/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/_stage.scss","/Users/chaitanya.saragadam/OneDrive - ServiceNow/myrepos/MyApps/SrsteeApp/srstee/client/external_modules/formBuilder/src/sass/_kc-toggle.scss"],names:[],mappings:"AAAA,WACE,qBACA,+wSAAgxS,CAAA,+CAchxS,qBACA,kBACA,gBACA,WAEA,qBACA,wBACA,UACA,kBACA,kBAIA,oBACA,oBAGA,gBAIA,gBAAiB,CAOlB,0BAC2B,eAAgB,CAAI,kBAC5B,eAAgB,CAAI,sBAChB,eAAgB,CAAI,4BACd,eAAgB,CAAI,yBACvB,eAAgB,CAAI,uBACtB,eAAgB,CAAI,oBACvB,eAAgB,CAAI,sBAClB,eAAgB,CAAI,kBACxB,eAAgB,CAAI,oBAClB,eAAgB,CAAI,kBACtB,eAAgB,CAAI,oBAClB,eAAgB,CAAI,oBACpB,eAAgB,CAAI,oBACpB,eAAgB,CAAI,oBACpB,eAAgB,CAAI,uBACjB,eAAgB,CAAI,oBACvB,eAAgB,CAAI,kBACtB,eAAgB,CC1DpC,wBAME,iBAAkB,CANpB,0BCFE,qBAAsB,CDExB,8BCWE,kBAAmB,CDXrB,iCCeE,aAAc,CDfhB,6HCsBE,oBACA,kBACA,mBAAoB,CDxBtB,mCC4BE,kBACA,qBACA,qBAAsB,CD9BxB,wCCiCI,kBACA,UAAW,CDlCf,2FCsCI,0BACA,4BAA6B,CDvCjC,iGC2CI,eAAgB,CD3CpB,4MCkDI,gBAAiB,CDlDrB,irBC8DI,yBACA,2BAA4B,CD/DhC,0LCsEI,SAAU,CDtEd,6BC2EE,qBACA,iBACA,gBACA,eACA,gBACA,uBACA,kBACA,mBACA,sBACA,0BACA,eACA,yBAAA,sBAAA,qBAAA,iBACA,sBACA,iBAAkB,CDxFpB,oCC2FI,kBACA,eACA,sBACA,iBAAkB,CD9FtB,oCCkGI,iBACA,eACA,gBACA,iBAAkB,CDrGtB,oCCyGI,gBACA,eACA,gBACA,iBAAkB,CD5GtB,gHCkHI,qBAAsB,CDlH1B,ydC6HE,yBACA,2BAA4B,CD9H9B,uICoIE,kBAAmB,CDpIrB,+KC0IE,YACA,kBACA,eACA,qBAAsB,CD7IxB,qCCiJE,kBACA,cACA,wBAAyB,CDnJ3B,mDCsJI,kBACA,UACA,WACA,WACA,eAAgB,CD1JpB,qECgKE,eACA,uBACA,aAAc,CDlKhB,8CCsKE,WAAY,CDtKd,sCC0KE,YACA,cACA,WACA,iBACA,eACA,uBACA,iBAAkB,CDhLpB,4CCmLI,UACA,wEAAkF,CDpLtF,oCCyLE,cACA,kBAAmB,CD1LrB,mEC+LE,qBAAsB,CD/LxB,oCCmME,WAAY,CDnMd,mCCuME,UAAW,CDvMb,gFC4ME,aCtMa,CFNf,oPCmNI,gBAAiB,CDnNrB,qFCyNE,iBACA,qBACA,sBACA,cAAe,CD5NjB,mIC+NM,YAAa,CD/NnB,6GCsOE,cAAe,CDtOjB,8CC0OE,sBACA,aACA,gBACA,UACA,sBACA,uBACA,kBACA,WACA,iBACA,eAAgB,CDnPlB,iDCsPI,aACA,eACA,YACA,SACA,2CAA8C,CD1PlD,sHC8PM,iCC9OuC,CD+OxC,AD/PL,iCGHE,UACA,yBAA2B,CHE7B,yDGEM,UAAW,CHFjB,oCGOI,aACA,UDTO,CEWP,yBJVJ,iCGYI,UAAW,CHZf,oCGeM,YAAa,CACd,CHhBL,sCGqBE,SACA,UACA,iBAAkB,CHvBpB,yCG0BI,YACA,gBACA,gBACA,aACA,gBACA,gBACA,yBAAA,sBAAA,qBAAA,iBACA,mBACA,uBACA,gBACA,kCDzBwB,CFX5B,uDGuCM,WACA,YACA,kBACA,iBACA,oBAAqB,CH3C3B,sHG+CQ,eACA,WAAY,CHhDpB,qDGqDM,0BACA,YAAa,CHtDnB,oDG0DM,yBAA0B,CH1DhC,gDG8DM,kBACA,cAAe,CH/DrB,+CGmEM,wBAAoC,CHnE1C,4DGuEM,kBACA,2BACA,8BACA,qBD7EM,CFGZ,4DG8EM,QACA,gBACA,UACA,SACA,aAAc,CHlFpB,gDGsFM,UAAW,CHtFjB,sDG0FM,6BACA,gBACA,UACA,cAAe,CH7FrB,yDGgGQ,aAAc,CCtFlB,yBJVJ,gDGsGQ,cAAe,CHtGvB,8CG0GQ,YAAa,CACd,CH3GP,yEGiHM,gBACA,SACA,WACA,wEACA,cACA,yDAAA,iDACA,mBACA,gBACA,iBACA,mCAAqC,CH1H3C,iDGiII,UAAW,CHjIf,wDGoIM,WACA,0BACA,wBACA,0BACA,gBACA,uBAAyB,CHzI/B,oEG4IQ,oCACA,uBACA,oBAAqB,CH9I7B,mEGkJQ,mCAAqC,CHlJ7C,sCGyJE,YACA,cAAe,CH1JjB,6CG6JI,aAAc,CH7JlB,oCKHE,kBACA,UACA,SACA,qBAAsB,CDUpB,yBJVJ,oCKGI,uBAAwB,CAgB3B,CLnBD,0CKOI,uBACA,oCHMyC,CFd7C,gDKUM,2BACA,kBACA,kBACA,QACA,OACA,WACA,eAAgB,CLhBtB,8BKsBE,qBACA,iBACA,2CAA8C,CLxBhD,2CK2BI,aHrBW,CFNf,uCK+BI,eAAgB,CL/BpB,uCKwCM,qBACA,UACA,sEAAgF,CL1CtF,sDKqCQ,SAAU,CLrClB,iDK8CU,kBAAmB,CL9C7B,iCKqDI,kBACA,YACA,WACA,cACA,kBACA,sBACA,2DAAgE,CL3DpE,8CK8DM,mCH/CyC,CFf/C,6CKkEM,4BACA,0BAA2B,CLnEjC,4EKuEU,uBAAwB,CLvElC,4CK6EM,+BACA,6BAA8B,CL9EpC,iDKkFM,eAAgB,CACjB,uBAGC,GACE,QAAS,CAGX,GACE,WAAY,CAAA,CL3FpB,sGKiGM,SACA,UACA,wEACA,cACA,yDAAA,iDACA,mBACA,gBACA,kBACA,mCAAqC,CLzG3C,4FK8GM,sCACA,8BACA,sBACA,iBAAkB,CLjHxB,gDKqHM,UACA,kBACA,gBAAiB,CLvHvB,+DK2HU,oBAAqB,CL3H/B,gEKgIQ,WACA,iBAAkB,CLjI1B,mDKqIQ,oBAAqB,CLrI7B,sDKyIQ,eACA,gBACA,UH5IG,CFCX,6DK+IQ,eACA,iBACA,gBAAiB,CLjJzB,8CKsJM,kBACA,WACA,SACA,WACA,gBACA,6BACA,8BACA,+BACA,2BACA,cACA,4BACA,2BACA,eACA,4CAA8C,CLnKpD,oDKsKQ,oBAAqB,CLtK7B,g6CKsLQ,QAAS,CLtLjB,oLK0LQ,YAAa,CL1LrB,4MK+LU,aAAc,CL/LxB,4DKsMQ,iBACA,eAAgB,CLvMxB,6DK6MQ,YAAa,CL7MrB,qUKwNM,qBAAsB,CLxN5B,0CK6NI,WACA,mBAAoB,CL9NxB,6CKkOI,aAAc,CLlOlB,oDKqOM,wBAAyB,CLrO/B,2DKyOM,WACA,mBACA,iBACA,cACA,iBAAkB,CL7OxB,0CKkPI,YAAa,CLlPjB,uCKsPI,SAAU,CLtPd,2CK0PI,aAAc,CL1PlB,uDK6PM,QAAS,CL7Pf,sDKiQM,gBAAiB,CLjQvB,4FKqQM,YAAa,CLrQnB,gOK4QM,sBACA,sBACA,2CH9PuC,CFhB7C,4DKwRM,UAAW,CLxRjB,4DK4RM,WAAY,CL5RlB,iDKgSM,eAAmB,CLhSzB,8DKoSM,UAAW,CLpSjB,6DKwSM,WACA,YACA,oBAAqB,CL1S3B,iDK+SI,YAAa,CL/SjB,iFKoTI,WACA,kBACA,iBACA,eACA,eAAmB,CLxTvB,2DK4TI,aAAc,CL5TlB,gEKiUM,oBAAqB,CLjU3B,yCKsUI,gBACA,YAAa,CLvUjB,6CK2UI,kBACA,MACA,QACA,SAAU,CL9Ud,sDKkVQ,QAAS,CLlVjB,qDKqVQ,qBACA,UAAW,CLtVnB,kDK2VM,qBAEA,WACA,YACA,cACA,gBACA,qBACA,sBACA,cACA,iBACA,eACA,wBAAyB,CLtW/B,8DKyWQ,6BAA8B,CLzWtC,gEK+WQ,yBACA,UHnXI,CFGZ,gEKsXQ,yBACA,UH1XI,CFGZ,+DK6XQ,yBACA,UHjYI,CFGZ,8CKoYI,iBACA,gBACA,WACA,cAAe,CLvYnB,qGK2YM,gBACA,iBACA,yBACA,eACA,kBACA,cAAe,CLhZrB,qDKqZI,mBACA,oBAAqB,CLtZzB,2DKyZM,eAAmB,CD/YrB,yBJVJ,qDK6ZM,cACA,UAAW,CAEd,CLhaH,gDKmaI,qBACA,WACA,eACA,mBACA,gBACA,kBACA,gBACA,SAAU,CL1ad,mDK6aM,YACA,UAAW,CL9ajB,AKkbO,kKAIG,YAAa,CLtbvB,2DK2bQ,kBACA,UACA,WACA,YACA,WACA,SACA,eACA,UACA,aH7bO,CFNf,kEKqcU,QAAS,CLrcnB,iEKycU,yBACA,qBACA,UH9cE,CFGZ,iEKidM,SACA,QAAS,CLldf,iEKsdM,yBACA,YACA,UAAW,CLxdjB,sDK8dM,WACA,WACA,UAAW,CLhejB,8GKueM,UAAW,CLvejB,4DK4eI,UAAW,CL5ef,0DKkfQ,sBACA,aACA,iBACA,gCACA,eAAgB,CLtfxB,6CK4fI,iBACA,mBACA,kBACA,SACA,wBHrfwB,CFX5B,yDKmgBM,mBACA,eACA,UAAW,CLrgBjB,8EKwgBQ,cAAe,CLxgBvB,kDKihBM,UAAW,CLjhBjB,6HKshBM,WAAY,CLthBlB,ibKgiBM,uCACA,iBACA,yBACA,qBHtiBM,CEaR,yBJVJ,yDKwiBQ,WACA,cACA,UAAW,CACZ,CL3iBP,gEK+iBM,UAAW,CL/iBjB,wDKmjBM,cAAe,CAChB,kQAMG,aAAc,CL1jBtB,qIK8jBQ,mBACA,gBACA,gBACA,iBACA,gBACA,WACA,mBACA,gBACA,uBACA,yBAA0B,CD7jB9B,yBJVJ,qIK0kBU,cACA,WACA,WACA,eAAgB,CL7kB1B,6JKglBY,YAAa,CACd,CLjlBX,2pBK0lBQ,gBACA,WACA,mBACA,gBACA,2BAA4B,CL9lBpC,yDKomBQ,wBH9lBO,CFNf,iEKwmBQ,UAAW,CLxmBnB,+DK4mBQ,mBACA,wBHlmBoB,CFX5B,sDKmnBQ,cACA,gBACA,eAAiB,CLrnBzB,mEKynBQ,eAAgB,CLznBxB,8DK8nBM,aACA,aACA,cACA,mBACA,kCHhoB6B,CEQ/B,yBJVJ,8DKqoBQ,aAAc,CAcjB,CLnpBL,oEKyoBQ,gBACA,WACA,WACA,cAAe,CL5oBvB,oEKgpBQ,eACA,QAAS,CLjpBjB,+EK0pBM,YAAa,CL1pBnB,kDKiqBI,SAAU,CLjqBd,kCKwqBE,iBAAkB,CLxqBpB,8CK4qBE,0BACA,4BACA,YACA,WACA,sBACA,iBACA,kBACA,WACA,SACA,YACA,iBACA,eACA,kBACA,cAAe,CLzrBjB,+CK6rBE,aACA,8BACA,uBACA,YACA,WACA,SACA,kBACA,WACA,cAAe,CLrsBjB,yCKysBE,mBACA,WACA,gBACA,WACA,YACA,kBACA,qBACA,kBACA,iBACA,aACA,eACA,cAAe,CLptBjB,mCMHE,wBAA0B,CNG5B,wCMAI,kBACA,WACA,YACA,mBACA,qBACA,kBACA,sBACA,YACA,gBACA,WACA,iBACA,qBAAsB,CNX1B,6FMeM,kBACA,qBACA,KAAM,CNjBZ,8CMqBM,kBACA,WACA,UACA,YACA,OACA,kBACA,+CACA,sBACA,yBACA,uBAAwB,CN9B9B,+CMkCM,kBACA,QACA,SACA,WACA,uBACA,YACA,qCACA,4BAA6B,CNzCnC,yCM8CI,SACA,gBACA,QACA,UACA,oBACA,QAAS,CNnDb,4DMuDQ,0BAA2B,CNvDnC,6DM2DQ,wBJnDM,CFRd,8BASI,WACA,cACA,UAAW,CACZ,qBAKD,kBAAmB,CAFrB,2CAKI,WAAY,CALhB,yCASI,UAAW,CACZ,oDAOD,aAAc,CACf,uCAIC,YACA,cACA,SACA,WACA,iBAAkB,CACnB,yEAKC,WAAY,CACb,SAIC,aACA,kBACA,MACA,OACA,yBACA,sBACA,kBACA,YACA,WACA,WACA,gBACA,eACA,mBAAoB,CAbtB,gBAgBI,iCACA,YAAa,CAjBjB,+BAsBI,WACA,kBACA,mBACA,yBACA,8BACA,cACA,QACA,UACA,kBACA,aACA,SAAU,CAhCd,WAoCI,0BACA,UE3FQ,CF4FT,wHAQG,SAAU,CACX,6BAKH,qBACA,qBACA,eACA,eACA,YAAa,CACd,aAGC,SAAU,CADZ,mBAII,iBAAiC,CAJrC,oBAQI,QAAS,CACV,4BAID,qBACA,WACA,YACA,mBACA,mBAAoB,CACrB,2BAIG,aAAc,CACf,sBAID,eACA,MACA,OACA,WACA,YACA,gCACA,aACA,UAAW,CARb,8BAWI,aAAc,CACf,qBAID,kBACA,kBACA,gBACA,WACA,+BACA,MACA,OACA,aACA,2BACA,gBACA,eACA,iBAAkB,CAZpB,wBAeI,YAAa,CAfjB,iCAmBI,UACA,wBExKe,CFoJnB,qCAuBM,gBACA,cACA,gBACA,SACA,aAAyB,CA3B/B,gCAgCI,+BAAiC,CAhCrC,oDAoCQ,WACA,QACA,SACA,mCACA,oCACA,2BACA,kBACA,SACA,SACA,8BAAgC,CA7CxC,kCAmDI,kBACA,gBACA,iBACA,UAAW,CAtDf,uCAyDM,gBAAiB,CAClB",file:"form-builder.scss",sourcesContent:["@font-face {\n  font-family: 'fb-icons';\n  src: url('data:application/octet-stream;base64,') format('woff');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fb-icons';\n    src: url('../font/fb-icons.svg?19833733#fb-icons') format('svg');\n  }\n}\n*/\n\n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fb-icons\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n.icon-autocomplete:before { content: '\\e800'; } /* '' */\n.icon-date:before { content: '\\e801'; } /* '' */\n.icon-checkbox:before { content: '\\e802'; } /* '' */\n.icon-checkbox-group:before { content: '\\e803'; } /* '' */\n.icon-radio-group:before { content: '\\e804'; } /* '' */\n.icon-rich-text:before { content: '\\e805'; } /* '' */\n.icon-select:before { content: '\\e806'; } /* '' */\n.icon-textarea:before { content: '\\e807'; } /* '' */\n.icon-text:before { content: '\\e808'; } /* '' */\n.icon-pencil:before { content: '\\e809'; } /* '' */\n.icon-file:before { content: '\\e80a'; } /* '' */\n.icon-hidden:before { content: '\\e80b'; } /* '' */\n.icon-cancel:before { content: '\\e80c'; } /* '' */\n.icon-button:before { content: '\\e80d'; } /* '' */\n.icon-header:before { content: '\\e80f'; } /* '' */\n.icon-paragraph:before { content: '\\e810'; } /* '' */\n.icon-number:before { content: '\\e811'; } /* '' */\n.icon-copy:before { content: '\\f24d'; } /* '' */\n","@import 'base/variables';\r\n@import 'base/font';\r\n@import 'base/mixins';\r\n\r\n.form-wrap.form-builder {\r\n  @import 'base/bs';\r\n  @import 'base/animation';\r\n  @import 'controls';\r\n  @import 'stage';\r\n  @import 'kc-toggle';\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    display: table;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.cb-wrap,\r\n.stage-wrap {\r\n  vertical-align: top;\r\n\r\n  &.pull-right {\r\n    float: right;\r\n  }\r\n\r\n  &.pull-left {\r\n    float: left;\r\n  }\r\n}\r\n\r\n.form-elements,\r\n.form-group,\r\n.multi-row span,\r\ntextarea {\r\n  display: block;\r\n}\r\n\r\n.form-elements::after,\r\n.form-group::after {\r\n  content: '.';\r\n  display: block;\r\n  height: 0;\r\n  clear: both;\r\n  visibility: hidden;\r\n}\r\n\r\n.form-elements .field-options div:hover,\r\n.frmb .legend,\r\n.frmb .prev-holder {\r\n  cursor: move;\r\n}\r\n\r\n// tooltips\r\n.frmb-tt {\r\n  display: none;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  border: 1px solid darken($grey, 25%);\r\n  background-color: $grey;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  color: $white;\r\n  z-index: 20;\r\n  text-align: left;\r\n  font-size: 12px;\r\n  pointer-events: none;\r\n\r\n  &::before {\r\n    border-color: darken($grey, 25%) transparent;\r\n    bottom: -11px;\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    border-style: solid;\r\n    border-width: 10px 10px 0;\r\n    border-color: $grey transparent;\r\n    display: block;\r\n    width: 0;\r\n    z-index: 1;\r\n    margin-left: -10px;\r\n    bottom: -10px;\r\n    left: 20px;\r\n  }\r\n\r\n  a {\r\n    text-decoration: underline;\r\n    color: $white;\r\n  }\r\n}\r\n\r\n.frmb li {\r\n  &:hover,\r\n  .fb-mobile & {\r\n    .del-button,\r\n    .toggle-form {\r\n      opacity: 1;\r\n    }\r\n  }\r\n}\r\n\r\n.frmb-xml .ui-dialog-content {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  font-size: 12px;\r\n  padding: 0 30px;\r\n  margin-top: 0;\r\n}\r\n\r\n.toggle-form {\r\n  opacity: 0;\r\n\r\n  &:hover {\r\n    border-color: lighten($grey, 40%);\r\n  }\r\n\r\n  &::before {\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n.formb-field-vars .copy-var {\r\n  display: inline-block;\r\n  width: 24px;\r\n  height: 24px;\r\n  background: $grey-light-30;\r\n  text-indent: -9999px;\r\n}\r\n\r\n.ui-button {\r\n  .ui-button-text {\r\n    line-height: 0;\r\n  }\r\n}\r\n\r\n.form-builder-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: $overlay-color;\r\n  display: none;\r\n  z-index: 10;\r\n\r\n  &.visible {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.form-builder-dialog {\r\n  position: absolute;\r\n  border-radius: 5px;\r\n  background: $white;\r\n  z-index: 20;\r\n  transform: translate(-50%, -50%);\r\n  top: 0;\r\n  left: 0;\r\n  padding: 10px;\r\n  box-shadow: 0 3px 10px $black;\r\n  min-width: 166px;\r\n  max-height: 80%;\r\n  overflow-y: scroll;\r\n\r\n  h3 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  &.data-dialog {\r\n    width: 65%;\r\n    background-color: $dirt-gray;\r\n\r\n    pre {\r\n      background: none;\r\n      border: 0 none;\r\n      box-shadow: none;\r\n      margin: 0;\r\n      color: darken($white, 5%);\r\n    }\r\n  }\r\n\r\n  &.positioned {\r\n    transform: translate(-50%, -100%);\r\n\r\n    .button-wrap {\r\n      &::before {\r\n        content: '';\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 15px solid transparent;\r\n        border-right: 15px solid transparent;\r\n        border-top: 10px solid $white;\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 100%;\r\n        transform: translate(-50%, 10px);\r\n      }\r\n    }\r\n  }\r\n\r\n  .button-wrap {\r\n    position: relative;\r\n    margin-top: 10px;\r\n    text-align: right;\r\n    clear: both;\r\n\r\n    .btn {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n}\r\n","// Minimal Bootstrap\n* {\n  box-sizing: border-box;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\ninput {\n  line-height: normal;\n}\n\ntextarea {\n  overflow: auto;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.btn-group {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n\n  & > .btn {\n    position: relative;\n    float: left;\n  }\n\n  > .btn:first-child:not(:last-child):not(.dropdown-toggle) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {\n    border-radius: 0;\n  }\n\n  .btn + .btn,\n  .btn + .btn-group,\n  .btn-group + .btn,\n  .btn-group + .btn-group {\n    margin-left: -1px;\n  }\n\n  > .btn:last-child:not(:first-child),\n  > .dropdown-toggle:not(:first-child),\n  .input-group .form-control:last-child,\n  .input-group-addon:last-child,\n  .input-group-btn:first-child > .btn-group:not(:first-child) > .btn,\n  .input-group-btn:first-child > .btn:not(:first-child),\n  .input-group-btn:last-child > .btn,\n  .input-group-btn:last-child > .btn-group > .btn,\n  .input-group-btn:last-child > .dropdown-toggle {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  > .btn.active,\n  > .btn:active,\n  > .btn:focus,\n  > .btn:hover {\n    z-index: 2;\n  }\n}\n\n.btn {\n  display: inline-block;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.42857143;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  touch-action: manipulation;\n  cursor: pointer;\n  user-select: none;\n  background-image: none;\n  border-radius: 4px;\n\n  &.btn-lg {\n    padding: 10px 16px;\n    font-size: 18px;\n    line-height: 1.3333333;\n    border-radius: 6px;\n  }\n\n  &.btn-sm {\n    padding: 5px 10px;\n    font-size: 12px;\n    line-height: 1.5;\n    border-radius: 3px;\n  }\n\n  &.btn-xs {\n    padding: 1px 5px;\n    font-size: 12px;\n    line-height: 1.5;\n    border-radius: 3px;\n  }\n\n  &.active,\n  &.btn-active,\n  &:active {\n    background-image: none;\n  }\n}\n\n.input-group .form-control:last-child,\n.input-group-addon:last-child,\n.input-group-btn:first-child > .btn-group:not(:first-child) > .btn,\n.input-group-btn:first-child > .btn:not(:first-child),\n.input-group-btn:last-child > .btn,\n.input-group-btn:last-child > .btn-group > .btn,\n.input-group-btn:last-child > .dropdown-toggle {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.input-group .form-control,\n.input-group-addon,\n.input-group-btn {\n  display: table-cell;\n}\n\n.input-group-lg > .form-control,\n.input-group-lg > .input-group-addon,\n.input-group-lg > .input-group-btn > .btn {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n}\n\n.input-group {\n  position: relative;\n  display: table;\n  border-collapse: separate;\n\n  .form-control {\n    position: relative;\n    z-index: 2;\n    float: left;\n    width: 100%;\n    margin-bottom: 0;\n  }\n}\n\n.form-control,\noutput {\n  font-size: 14px;\n  line-height: 1.42857143;\n  display: block;\n}\n\ntextarea.form-control {\n  height: auto;\n}\n\n.form-control {\n  height: 34px;\n  display: block;\n  width: 100%;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.42857143;\n  border-radius: 4px;\n\n  &:focus {\n    outline: 0;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);\n  }\n}\n\n.form-group {\n  margin-left: 0px;\n  margin-bottom: 15px;\n}\n\n.btn,\n.form-control {\n  background-image: none;\n}\n\n.pull-right {\n  float: right;\n}\n\n.pull-left {\n  float: left;\n}\n\n.fb-required,\n.required-asterisk {\n  color: $error;\n}\n\n.fb-checkbox-group,\n.fb-radio-group {\n  input[type='checkbox'],\n  input[type='radio'] {\n    margin: 0 4px 0 0;\n  }\n}\n\n.fb-checkbox-inline,\n.fb-radio-inline {\n  margin-right: 8px;\n  display: inline-block;\n  vertical-align: middle;\n  padding-left: 0;\n  label {\n    input[type='text'] {\n      margin-top: 0;\n    }\n  }\n}\n\n.fb-checkbox-inline:first-child,\n.fb-radio-inline:first-child {\n  padding-left: 0;\n}\n\n.fb-autocomplete-list {\n  background-color: $white;\n  display: none;\n  list-style: none;\n  padding: 0;\n  border: 1px solid $grey-light;\n  border-width: 0 1px 1px;\n  position: absolute;\n  z-index: 20;\n  max-height: 200px;\n  overflow-y: auto;\n\n  li {\n    display: none;\n    cursor: default;\n    padding: 5px;\n    margin: 0;\n    transition: background-color 200ms ease-in-out;\n\n    &:hover,\n    &.active-option {\n      background-color: $input-box-shadow-color;\n    }\n  }\n}\n","$black: #000;\n$white: #fff;\n$off-white: #fefefe;\n$grey: #666;\n$grey-dark: #222;\n$grey-light: #ccc;\n$grey-light-30: lighten($grey, 30%);\n$dirt-gray: #23241f;\n\n$success: #08fe00;\n$error: #c10000;\n$remove: #c66865;\n$copy: #6fc665;\n$edit: #65aac6;\n\n$input-border-color: #c5c5c5;\n\n$overlay-color: rgba(0, 0, 0, 0.5);\n$empty-stage-color: rgba(255, 255, 255, 0.25);\n$hidden-field-bgcolor: rgba(255, 255, 255, 0.6);\n$input-box-shadow-color: rgba(0, 0, 0, 0.075);\n\n$primary: #337ab7;\n",".cb-wrap {\r\n  width: 26%;\r\n  transition: transform 250ms;\r\n\r\n  &.pull-left {\r\n    .form-actions {\r\n      float: left;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    margin-top: 0;\r\n    color: $grey;\r\n  }\r\n\r\n  @include breakpoint('phone-lrg') {\r\n    width: 64px;\r\n\r\n    h4 {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.frmb-control {\r\n  margin: 0;\r\n  padding: 0;\r\n  border-radius: 5px;\r\n\r\n  li {\r\n    cursor: move;\r\n    list-style: none;\r\n    margin: 0 0 -1px 0;\r\n    padding: 10px;\r\n    text-align: left;\r\n    background: $white;\r\n    user-select: none;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    box-shadow: inset 0 0 0 1px $input-border-color;\r\n\r\n    .control-icon {\r\n      width: 16px;\r\n      height: auto;\r\n      margin-right: 10px;\r\n      margin-left: 0.2em;\r\n      display: inline-block;\r\n\r\n      img,\r\n      svg {\r\n        max-width: 100%;\r\n        height: auto;\r\n      }\r\n    }\r\n\r\n    &:first-child {\r\n      border-radius: 5px 5px 0 0;\r\n      margin-top: 0;\r\n    }\r\n\r\n    &:last-child {\r\n      border-radius: 0 0 5px 5px;\r\n    }\r\n\r\n    &::before {\r\n      margin-right: 10px;\r\n      font-size: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: darken($white, 5%);\r\n    }\r\n\r\n    &.ui-sortable-helper {\r\n      border-radius: 5px;\r\n      transition: box-shadow 250ms;\r\n      box-shadow: 2px 2px 6px 0 $grey;\r\n      border: 1px solid $white;\r\n    }\r\n\r\n    &.ui-state-highlight {\r\n      width: 0;\r\n      overflow: hidden;\r\n      padding: 0;\r\n      margin: 0;\r\n      border: 0 none;\r\n    }\r\n\r\n    &.moving {\r\n      opacity: .6;\r\n    }\r\n\r\n    &.fb-separator {\r\n      background-color: transparent;\r\n      box-shadow: none;\r\n      padding: 0;\r\n      cursor: default;\r\n\r\n      hr {\r\n        margin: 10px 0;\r\n      }\r\n    }\r\n\r\n    @include breakpoint('phone-lrg') {\r\n      &::before {\r\n        font-size: 30px;\r\n      }\r\n\r\n      span {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.sort-enabled {\r\n    li.ui-state-highlight {\r\n      box-shadow: none;\r\n      height: 0;\r\n      width: 100%;\r\n      background: radial-gradient(ellipse at center, rgba(84, 84, 84, 1) 0%, rgba(0, 0, 0, 0) 75%);\r\n      border: 0 none;\r\n      clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\r\n      visibility: visible;\r\n      overflow: hidden;\r\n      margin: 1px 0 3px;\r\n      animation: PLACEHOLDER 250ms forwards;\r\n    }\r\n  }\r\n}\r\n\r\n.fb-mobile {\r\n  .form-actions {\r\n    width: 100%;\r\n\r\n    button {\r\n      width: 100%;\r\n      font-size: .85em !important;\r\n      display: block !important;\r\n      border-radius: 0 !important;\r\n      margin-top: -1px;\r\n      margin-left: 0 !important;\r\n\r\n      &:first-child {\r\n        border-radius: 5px 5px 0 0 !important;\r\n        margin-top: 0 !important;\r\n        border-bottom: 0 none;\r\n      }\r\n\r\n      &:last-child {\r\n        border-radius: 0 0 5px 5px !important;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.form-actions {\r\n  float: right;\r\n  margin-top: 5px;\r\n\r\n  button {\r\n    border: 0 none;\r\n  }\r\n}\r\n","/*\n  Mixins\n*/\n\n@mixin breakpoint($point) {\n  @if $point == phone-sm {\n    /* smartphones, portrait iPhone, small portrait Android */\n    @media (max-width: 320px) {\n      @content;\n    }\n  }\n\n  @else if $point == phone-lrg {\n    /* smartphones, Android phones, landscape iPhone */\n    @media (max-width: 481px) {\n      @content;\n    }\n  }\n\n  @else if $point == tablet-sm {\n    /* portrait tablets, portrait iPad, e-readers (Nook/Kindle), smaller landscape Android */\n    @media (max-width: 641px) {\n      @content;\n    }\n  }\n\n  @else if $point == tablet-md {\n    /* tablet, landscape iPad, lo-res laptops ands desktops */\n    @media (max-width: 961px) {\n      @content;\n    }\n  }\n\n  @else if $point == tablet-lrg {\n    /* big landscape tablets, laptops, and desktops */\n    @media (max-width: 1025px) {\n      @content;\n    }\n  }\n\n  @else if $point == tablet-lrg {\n    /* hi-res laptops and desktops */\n    @media (max-width: 1281px) {\n      @content;\n    }\n  }\n\n  @else {\n    @media (max-width: $point) {\n      @content;\n    }\n  }\n}\n\n@mixin custom-scroll($trackColor, $thumbColor) {\n  /* Let's get this party started */\n  &::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n  }\n\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background-color: $trackColor;\n  }\n\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: $thumbColor;\n  }\n\n  &::-webkit-scrollbar-thumb:window-inactive {\n    background: $thumbColor;\n  }\n\n  overflow: auto;\n}\n",".stage-wrap {\n  position: relative;\n  padding: 0;\n  margin: 0;\n  width: calc(74% - 5px);\n\n  @include breakpoint('phone-lrg') {\n    width: calc(100% - 64px);\n  }\n\n  &.empty {\n    border: 3px dashed $grey-light;\n    background-color: $empty-stage-color;\n    &::after {\n      content: attr(data-content);\n      position: absolute;\n      text-align: center;\n      top: 50%;\n      left: 0;\n      width: 100%;\n      margin-top: -1em;\n    }\n  }\n}\n\n.frmb {\n  list-style-type: none;\n  min-height: 200px;\n  transition: background-color 500ms ease-in-out;\n\n  .fb-required {\n    color: $error;\n  }\n\n  &.removing {\n    overflow: hidden;\n  }\n\n  > li {\n    &:hover {\n      .field-actions {\n        opacity: 1;\n      }\n\n      border-color: #66afe9;\n      outline: 0;\n      box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1), 0 0 8px rgba(102, 175, 233, 0.6);\n\n      li {\n        :hover {\n          background: #fefefe;\n        }\n      }\n    }\n  }\n\n  li {\n    position: relative;\n    padding: 6px;\n    clear: both;\n    margin-left: 0;\n    margin-bottom: 3px;\n    background-color: $white;\n    transition: background-color 250ms ease-in-out, margin-top 400ms;\n\n    &.hidden-field {\n      background-color: $hidden-field-bgcolor;\n    }\n\n    &:first-child {\n      border-top-right-radius: 5px;\n      border-top-left-radius: 5px;\n\n      .field-actions {\n        .btn:last-child {\n          border-radius: 0 5px 0 0;\n        }\n      }\n    }\n\n    &:last-child {\n      border-bottom-right-radius: 5px;\n      border-bottom-left-radius: 5px;\n    }\n\n    &.no-fields label {\n      font-weight: 400;\n    }\n\n    @keyframes PLACEHOLDER {\n      0% {\n        height: 0;\n      }\n\n      100% {\n        height: 15px;\n      }\n    }\n\n    &.frmb-placeholder,\n    &.ui-state-highlight {\n      height: 0;\n      padding: 0;\n      background: radial-gradient(ellipse at center, rgba(84, 84, 84, 1) 0%, rgba(0, 0, 0, 0) 75%);\n      border: 0 none;\n      clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\n      visibility: visible;\n      overflow: hidden;\n      margin-bottom: 3px;\n      animation: PLACEHOLDER 250ms forwards;\n    }\n\n    &.moving,\n    &.ui-sortable-helper {\n      transition: box-shadow 500ms ease-in-out;\n      box-shadow: 2px 2px 6px 0 $grey;\n      border: 1px solid $white;\n      border-radius: 5px;\n    }\n\n    &.disabled-field {\n      z-index: 1;\n      position: relative;\n      overflow: visible;\n\n      &:hover {\n        .frmb-tt {\n          display: inline-block;\n        }\n      }\n\n      [type='checkbox'] {\n        float: left;\n        margin-right: 10px;\n      }\n\n      h2 {\n        border-bottom: 0 none;\n      }\n\n      label {\n        font-size: 12px;\n        font-weight: 400;\n        color: $grey;\n      }\n\n      .prev-holder {\n        cursor: default;\n        line-height: 28px;\n        padding-left: 5px;\n      }\n    }\n\n    .close-field {\n      position: absolute;\n      color: $grey;\n      left: 50%;\n      bottom: 6px;\n      background: $white;\n      border-top: 1px solid $input-border-color;\n      border-left: 1px solid $input-border-color;\n      border-right: 1px solid $input-border-color;\n      transform: translateX(-50%);\n      padding: 0 5px;\n      border-top-right-radius: 3px;\n      border-top-left-radius: 3px;\n      cursor: pointer;\n      transition: background-color 250ms ease-in-out;\n\n      &:hover {\n        text-decoration: none;\n      }\n    }\n\n    &.button-field,\n    &.header-field,\n    &.paragraph-field {\n      h1,\n      h2,\n      h3,\n      p,\n      canvas,\n      output,\n      address,\n      blockquote,\n      .prev-holder {\n        margin: 0;\n      }\n\n      .field-label {\n        display: none;\n      }\n\n      &.editing {\n        .field-label {\n          display: block;\n        }\n      }\n    }\n\n    &.paragraph-field {\n      .fld-label {\n        min-height: 150px;\n        overflow-y: auto;\n      }\n    }\n\n    &.checkbox-field {\n      .field-label {\n        display: none;\n      }\n    }\n  }\n\n  li.deleting,\n  li.delete:hover,\n  li:hover li.delete:hover {\n    background-color: #fdd;\n\n    .close-field {\n      background-color: #fdd;\n    }\n  }\n\n  li.deleting {\n    z-index: 20;\n    pointer-events: none;\n  }\n\n  &.disabled-field {\n    padding: 0 5px;\n\n    :hover {\n      border-color: transparent;\n    }\n\n    .form-element {\n      float: none;\n      margin-bottom: 10px;\n      overflow: visible;\n      padding: 5px 0;\n      position: relative;\n    }\n  }\n\n  .frm-holder {\n    display: none;\n  }\n\n  .tooltip {\n    left: 20px;\n  }\n\n  .prev-holder {\n    display: block;\n\n    .form-group {\n      margin: 0;\n    }\n\n    .ql-editor {\n      min-height: 125px;\n    }\n\n    .form-group > label:not([class='fb-checkbox-label']) {\n      display: none;\n    }\n\n    select,\n    input[type='text'],\n    textarea,\n    input[type='number'] {\n      background-color: $white;\n      border: 1px solid $grey-light;\n      box-shadow: inset 0 1px 1px $input-box-shadow-color;\n    }\n\n    input[type='color'] {\n      width: 60px;\n      padding: 2px;\n      display: inline-block;\n    }\n\n    input[type='date'] {\n      width: auto;\n    }\n\n    select[multiple] {\n      height: auto;\n    }\n\n    label {\n      font-weight: normal;\n    }\n\n    input[type='number'] {\n      width: auto;\n    }\n\n    input[type='color'] {\n      width: 60px;\n      padding: 2px;\n      display: inline-block;\n    }\n  }\n\n  .required-asterisk {\n    display: none;\n  }\n\n  .field-label,\n  .legend {\n    color: $grey;\n    margin-bottom: 5px;\n    line-height: 27px;\n    font-size: 16px;\n    font-weight: normal;\n  }\n\n  .disabled-field .field-label {\n    display: block;\n  }\n\n  .other-option:checked + label {\n    input {\n      display: inline-block;\n    }\n  }\n\n  .other-val {\n    margin-left: 5px;\n    display: none;\n  }\n\n  .field-actions {\n    position: absolute;\n    top: 0;\n    right: 0;\n    opacity: 0;\n\n    a {\n      &::before {\n        margin: 0;\n      }\n      &:hover {\n        text-decoration: none;\n        color: #000;\n      }\n    }\n\n    .btn {\n      display: inline-block;\n\n      width: 32px;\n      height: 32px;\n      padding: 0 6px;\n      border-radius: 0;\n      border-color: $input-border-color;\n      background-color: $white;\n      color: $input-border-color;\n      line-height: 32px;\n      font-size: 16px;\n      border-width: 0 0 1px 1px;\n\n      &:first-child {\n        border-bottom-left-radius: 5px;\n      }\n    }\n\n    .toggle-form {\n      &:hover {\n        background-color: $edit;\n        color: $white;\n      }\n    }\n\n    .copy-button {\n      &:hover {\n        background-color: $copy;\n        color: $white;\n      }\n    }\n\n    .del-button {\n      &:hover {\n        background-color: $remove;\n        color: $white;\n      }\n    }\n  }\n\n  .option-actions {\n    text-align: right;\n    margin-top: 10px;\n    width: 100%;\n    margin-left: 2%;\n\n    button,\n    a {\n      background: $white;\n      padding: 5px 10px;\n      border: 1px solid $input-border-color;\n      font-size: 14px;\n      border-radius: 5px;\n      cursor: default;\n    }\n  }\n\n  .sortable-options-wrap {\n    width: 81.33333333%;\n    display: inline-block;\n\n    label {\n      font-weight: normal;\n    }\n\n    @include breakpoint('phone-lrg') {\n      display: block;\n      width: 100%;\n    }\n  }\n\n  .sortable-options {\n    display: inline-block;\n    width: 100%;\n    margin-left: 2%;\n    background: $input-border-color;\n    margin-bottom: 0;\n    border-radius: 5px;\n    list-style: none;\n    padding: 0;\n\n    > li {\n      cursor: move;\n      margin: 1px;\n\n      &:nth-child(1) .remove {\n        display: none;\n      }\n\n      .radio-group-field & {\n        &:nth-child(2) .remove {\n          display: none;\n        }\n      }\n\n      .remove {\n        position: absolute;\n        opacity: 1;\n        right: 14px;\n        height: 18px;\n        width: 18px;\n        top: 14px;\n        font-size: 12px;\n        padding: 0;\n        color: $error;\n        &::before {\n          margin: 0;\n        }\n\n        &:hover {\n          background-color: $error;\n          text-decoration: none;\n          color: $white;\n        }\n      }\n    }\n\n    .option-selected {\n      margin: 0;\n      width: 5%;\n    }\n\n    input[type='text'] {\n      width: calc(44.5% - 17px);\n      margin: 0 1%;\n      float: none;\n    }\n  }\n\n  .form-field {\n    .form-group {\n      width: 100%;\n      clear: left;\n      float: none;\n    }\n  }\n\n  .col-md-6,\n  .col-md-8 {\n    .form-elements {\n      width: 100%;\n    }\n  }\n\n  .field-options .add-area .add {\n    clear: both;\n  }\n\n  .style-wrap {\n    button {\n      &.selected {\n        border: 1px solid $black;\n        margin-top: 0;\n        margin-right: 1px;\n        box-shadow: 0 0 0 1px $white inset;\n        padding: 1px 5px;\n      }\n    }\n  }\n\n  .form-elements {\n    padding: 10px 5px;\n    background: #f7f7f7;\n    border-radius: 3px;\n    margin: 0;\n    border: 1px solid $input-border-color;\n\n    .input-wrap {\n      width: 81.33333333%;\n      margin-left: 2%;\n      float: left;\n\n      > input[type='checkbox'] {\n        margin-top: 8px;\n      }\n    }\n\n    .btn-group {\n      margin-left: 2%;\n    }\n\n    .add {\n      clear: both;\n    }\n\n    [contenteditable],\n    select[multiple] {\n      height: auto;\n    }\n\n    [contenteditable].form-control,\n    input[type='text'],\n    input[type='number'],\n    input[type='date'],\n    input[type='color'],\n    textarea,\n    select {\n      transition: background 250ms ease-in-out;\n      padding: 6px 12px;\n      border: 1px solid $input-border-color;\n      background-color: $white;\n    }\n\n    @include breakpoint('phone-lrg') {\n      .input-wrap {\n        width: 100%;\n        margin-left: 0;\n        float: none;\n      }\n    }\n\n    input[type='number'] {\n      width: auto;\n    }\n\n    .btn-group {\n      margin-left: 2%;\n    }\n\n    .false-label,\n    label {\n      .col-md-6 &,\n      .col-md-8 & {\n        display: block;\n      }\n\n      &:first-child {\n        width: 16.66666667%;\n        padding-top: 7px;\n        margin-bottom: 0;\n        text-align: right;\n        font-weight: 700;\n        float: left;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        text-transform: capitalize;\n\n        @include breakpoint('phone-lrg') {\n          display: block;\n          width: auto;\n          float: none;\n          text-align: left;\n\n          &.empty-label {\n            display: none;\n          }\n        }\n      }\n\n      &.multiple,\n      &.required-label,\n      &.toggle-label,\n      &.roles-label,\n      &.other-label {\n        text-align: left;\n        float: none;\n        margin-bottom: -3px;\n        font-weight: 400;\n        width: calc(81.3333% - 23px);\n      }\n    }\n\n    input {\n      &.error {\n        border: 1px solid $error;\n      }\n\n      &.fld-maxlength {\n        width: 75px;\n      }\n\n      &.field-error {\n        background: $off-white;\n        border: 1px solid $input-border-color;\n      }\n    }\n\n    label {\n      em {\n        display: block;\n        font-weight: 400;\n        font-size: 0.75em;\n      }\n\n      &.maxlength-label {\n        line-height: 1em;\n      }\n    }\n\n    .available-roles {\n      display: none;\n      padding: 10px;\n      margin: 10px 0;\n      background: darken($white, 10%);\n      box-shadow: inset 0 0 2px 0 $grey-light-30;\n\n      @include breakpoint('phone-lrg') {\n        margin-left: 0;\n      }\n\n      label {\n        font-weight: 400;\n        width: auto;\n        float: none;\n        display: inline;\n      }\n\n      input {\n        display: inline;\n        top: auto;\n      }\n    }\n  }\n}\n\n.autocomplete-field {\n  .sortable-options {\n    .option-selected {\n      display: none;\n    }\n  }\n}\n\n.fb-mobile {\n  .field-actions {\n    opacity: 1;\n  }\n}\n\n/*   ------------   TOOLTIP   ------------   */\n\n*[tooltip] {\n  position: relative;\n}\n\n*[tooltip]:hover:after {\n  background: rgba(0, 0, 0, 0.9);\n  border-radius: 5px 5px 5px 0;\n  bottom: 23px;\n  color: $white;\n  content: attr(tooltip);\n  padding: 10px 5px;\n  position: absolute;\n  z-index: 98;\n  left: 2px;\n  width: 230px;\n  text-shadow: none;\n  font-size: 12px;\n  line-height: 1.5em;\n  cursor: default;\n}\n\n*[tooltip]:hover:before {\n  border: solid;\n  border-color: $grey-dark transparent;\n  border-width: 6px 6px 0;\n  bottom: 17px;\n  content: '';\n  left: 2px;\n  position: absolute;\n  z-index: 99;\n  cursor: default;\n}\n\n.tooltip-element {\n  visibility: visible;\n  color: $white;\n  background: $black;\n  width: 16px;\n  height: 16px;\n  border-radius: 8px;\n  display: inline-block;\n  text-align: center;\n  line-height: 16px;\n  margin: 0 5px;\n  font-size: 12px;\n  cursor: default;\n}\n",".kc-toggle {\n  padding-left: 0 !important;\n\n  span {\n    position: relative;\n    width: 48px;\n    height: 24px;\n    background: lighten($grey, 50%);\n    display: inline-block;\n    border-radius: 4px;\n    border: 1px solid lighten($grey, 40%);\n    padding: 2px;\n    overflow: hidden;\n    float: left;\n    margin-right: 5px;\n    will-change: transform;\n\n    &::after,\n    &::before {\n      position: absolute;\n      display: inline-block;\n      top: 0;\n    }\n\n    &::after {\n      position: relative;\n      content: '';\n      width: 50%;\n      height: 100%;\n      left: 0;\n      border-radius: 3px;\n      background: linear-gradient(to bottom, lighten($grey-light-30, 30%) 0%, $grey-light 100%);\n      border: 1px solid lighten($grey, 20%);\n      transition: transform 100ms;\n      transform: translateX(0);\n    }\n\n    &::before {\n      border-radius: 4px;\n      top: 2px;\n      left: 2px;\n      content: '';\n      width: calc(100% - 4px);\n      height: 18px;\n      box-shadow: 0 0 1px 1px lighten($grey, 30%) inset;\n      background-color: transparent;\n    }\n  }\n\n  input {\n    height: 0;\n    overflow: hidden;\n    width: 0;\n    opacity: 0;\n    pointer-events: none;\n    margin: 0;\n\n    &:checked + span {\n      &::after {\n        transform: translateX(100%);\n      }\n\n      &::before {\n        background-color: $copy;\n      }\n    }\n  }\n}\n"],sourceRoot:""}])},function(e,t,n){var r=n(47);"string"==typeof r&&(r=[[e.i,r,""]]);var o={attrs:{class:"formBuilder-injected-style"},sourceMap:!0,hmr:!0,transform:void 0,insertInto:void 0};n(8)(r,o);r.locals&&(e.exports=r.locals)},function(t,n,r){var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};r(48);var a=A(r(46)),l=r(5),s=A(l),u=r(23),d=A(r(2)),f=A(r(11)),c=A(r(21)),p=A(r(35)),m=r(10),b=A(r(34)),h=r(1);function A(e){return e&&e.__esModule?e:{default:e}}function g(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}var y=function(t,n){var r=this,A=this,y=d.default.current,v="frmb-"+(new Date).getTime(),w=((new Date).getTime(),new u.Data(v)),C=new s.default(v);t.layout||(t.layout=c.default);var x=new t.layout(t.layoutTemplates,!0),B=new p.default(v,x,A,n),k=h.markup;t=B.processOptions(t),w.layout=B.editorLayout(t.controlPosition),B.editorUI(v),w.formID=v,w.lastID=w.formID+"-fld-1";var O=new b.default(t,C),q=m.config.subtypes=B.processSubtypes(t.subtypes),E=e(C.stage),j=e(C.controls);E.sortable({cursor:"move",opacity:.9,revert:150,beforeStop:function(e,t){return B.beforeStop.call(B,e,t)},start:function(e,t){return B.startMoving.call(B,e,t)},stop:function(e,t){return B.stopMoving.call(B,e,t)},cancel:["input","select","textarea",".disabled-field",".form-elements",".btn","button",".is-locked"].join(", "),placeholder:"frmb-placeholder"}),t.allowStageSort||E.sortable("disable"),E.sortable("disable"),j.sortable({helper:"clone",opacity:.9,connectWith:E,cancel:".fb-separator",cursor:"move",scroll:!1,placeholder:"ui-state-highlight",start:function(e,t){return B.startMoving.call(B,e,t)},stop:function(e,t){return B.stopMoving.call(B,e,t)},revert:150,beforeStop:function(e,t){return B.beforeStop.call(B,e,t)},distance:3,update:function(e,n){if(B.doCancel)return!1;n.item.parent()[0]===C.stage?(B.doCancel=!0,D(n.item)):(B.setFieldOrder(j),B.doCancel=!t.sortableControls)}});var D=function(e){if(e[0].classList.contains("input-set-control")){var n=[],r=t.inputSets.find(function(t){return(0,h.hyphenCase)(t.name||t.label)===e[0].dataset.type});if(r&&r.showHeader){var o={type:"header",subtype:"h2",id:r.name,label:r.label};n.push(o)}n.push.apply(n,r.fields),n.forEach(function(e){S(e,!0),(B.stopIndex||0===B.stopIndex)&&B.stopIndex++})}else S(e,!0)},L=e(C.editorWrap),M=k("div",C.controls,{id:w.formID+"-cb-wrap",className:"cb-wrap "+w.layout.controls});t.showActionButtons&&M.appendChild(C.formActions),L.append(C.stage,M),"textarea"!==n.type?e(n).append(L):e(n).replaceWith(L),e(C.controls).on("click","li",function(t){var n=t.target,r=e(n).closest("li");B.stopIndex=void 0,D(r),B.save.call(B)});var S=function(n){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o={};if(n instanceof jQuery)if(o.type=n[0].dataset.type,o.type){var i=O.custom.lookup(o.type);if(i)o=Object.assign({},i);else{var a=O.getClass(o.type);o.label=a.label(o.type)}}else{var l=n[0].attributes;r||(o.values=n.children().map(function(t,n){return{label:e(n).text(),value:e(n).attr("value"),selected:Boolean(e(n).attr("selected"))}}));for(var s=l.length-1;s>=0;s--)o[l[s].name]=l[s].value}else o=Object.assign({},n);o.name||(o.name=(0,h.nameAttr)(o)),r&&["text","number","file","date","select","textarea","autocomplete"].includes(o.type)&&(o.className=o.className||"form-control");var u=/(?:^|\s)btn-(.*?)(?:\s|$)/g.exec(o.className);u&&(o.style=u[1]),r&&(o=Object.assign({},o,t.onAddField(w.lastID,o)),setTimeout(function(){return document.dispatchEvent(f.default.fieldAdded)},10)),Y(o,r),C.stage.classList.remove("empty")},I=function(n){(n=B.getData(n))&&n.length?(n.forEach(function(e){return S((0,h.trimObj)(e))}),C.stage.classList.remove("empty")):t.defaultFields&&t.defaultFields.length?(t.defaultFields.forEach(function(e){return S(e)}),C.stage.classList.remove("empty")):t.prepend||t.append||(C.stage.classList.add("empty"),C.stage.dataset.content=d.default.get("getStarted")),function(){var n=[],r=function(e){return k("li",t[e],{className:"disabled-field form-"+e})};return t.prepend&&!e(".disabled-field.form-prepend",C.stage).length&&(n.push(!0),E.prepend(r("prepend"))),t.append&&!e(".disabled-field.form-.append",C.stage).length&&(n.push(!0),E.append(r("append"))),B.disabledTT(C.stage),n.some(function(e){return!0===e})}()&&C.stage.classList.remove("empty"),B.save()},F=function(e){var t=e.type,n=e.values,r=e.name,o=void 0,i=[k("a",d.default.get("addOption"),{className:"add add-opt"})],a=[k("label",d.default.get("selectOptions"),{className:"false-label"})],l=e.multiple||"checkbox-group"===t;if(n&&n.length)o=n.map(function(e){return Object.assign({},{selected:!1},e)});else{var s=[1,2,3];["checkbox-group","checkbox"].includes(t)&&(s=[1]);var u=(o=s.map(function(e){return function(e){var n={label:e,value:(0,h.hyphenCase)(e)};return"autocomplete"!==t&&(n.selected=!1),n}(""+d.default.get("optionCount",e))}))[0];u.hasOwnProperty("selected")&&"radio-group"!==t&&(u.selected=!0)}var f=k("div",i,{className:"option-actions"}),c=k("ol",o.map(function(e){return G(r,e,l)}),{className:"sortable-options"}),p=k("div",[c,f],{className:"sortable-options-wrap"});return a.push(p),k("div",a,{className:"form-group field-options"}).outerHTML},N=function(e){var n=e.type,r=[],i=function(e){var t=["required","label","description","placeholder","className","name","access","value"],n=!["header","paragraph","file","autocomplete"].concat(C.optionFields).includes(e),r={autocomplete:t.concat(["options","requireValidOption"]),button:["label","subtype","style","className","name","value","access"],checkbox:["required","label","description","toggle","inline","className","name","access","other","options"],text:t.concat(["subtype","maxlength"]),date:t,file:t.concat(["subtype","multiple"]),header:["label","subtype","className","access"],hidden:["name","value","access"],paragraph:["label","subtype","className","access"],number:t.concat(["min","max","step"]),select:t.concat(["multiple","options"]),textarea:t.concat(["subtype","maxlength","rows"]),test:t};r["checkbox-group"]=r.checkbox,r["radio-group"]=r.checkbox;var o=r[e];return"radio-group"===e&&(0,h.removeFromArray)("toggle",o),["header","paragraph","button"].includes(e)&&(0,h.removeFromArray)("description",o),n||(0,h.removeFromArray)("value",o),o||t}(n),a={required:function(){return P(e)},toggle:function(){return R("toggle",e,{first:d.default.get("toggle")})},inline:function(){var t={first:d.default.get("inline"),second:d.default.get("inlineDesc",n.replace("-group",""))};return R("inline",e,t)},label:function(){return K("label",e)},description:function(){return K("description",e)},subtype:function(){return W("subtype",e,q[n])},style:function(){return H(e.style)},placeholder:function(){return K("placeholder",e)},rows:function(){return Q("rows",e)},className:function(t){return K("className",e,t)},name:function(t){return K("name",e,t)},value:function(){return K("value",e)},maxlength:function(){return Q("maxlength",e)},access:function(){var n=['<div class="available-roles" '+(e.role?'style="display:block"':"")+">"];for(l in t.roles)if(t.roles.hasOwnProperty(l)){var r="fld-"+w.lastID+"-roles-"+l,o={type:"checkbox",name:"roles[]",value:l,id:r,className:"roles-field"};s.includes(l)&&(o.checked="checked"),n.push('<label for="'+r+'">'),n.push(B.input(o).outerHTML),n.push(" "+t.roles[l]+"</label>")}n.push("</div>");var i={first:d.default.get("roles"),second:d.default.get("limitRole"),content:n.join("")};return R("access",e,i)},other:function(){return R("other",e,{first:d.default.get("enableOther"),second:d.default.get("enableOtherMsg")})},options:function(){return F(e)},requireValidOption:function(){return R("requireValidOption",e,{first:" ",second:d.default.get("requireValidOption")})},multiple:function(){var t={default:{first:"Multiple",second:"set multiple attribute"},file:{first:d.default.get("multipleFiles"),second:d.default.get("allowMultipleFiles")},select:{first:" ",second:d.default.get("selectionsMessage")}};return R("multiple",e,t[n]||t.default)}},l=void 0,s=void 0!==e.role?e.role.split(","):[];["min","max","step"].forEach(function(t){a[t]=function(){return Q(t,e)}});var u=["name","className"];if(Object.keys(i).forEach(function(e){var o=i[e],l=[!0],s=t.disabledAttrs.includes(o);if(t.typeUserDisabledAttrs[n]){var d=t.typeUserDisabledAttrs[n];l.push(!d.includes(o))}if(t.typeUserAttrs[n]){var f=Object.keys(t.typeUserAttrs[n]);l.push(!f.includes(o))}s&&!u.includes(o)&&l.push(!1),l.every(Boolean)&&r.push(a[o](s))}),t.typeUserAttrs[n]){var f=function(e,t){var n=[],r={array:z,string:U,number:Q,boolean:function(e,n){var r;return R(e,o({},n,((r={})[e]=t[e],r)),{first:n.label})}};for(var i in e)if(e.hasOwnProperty(i)){var a=T(i,e[i]),l=d.default.get(i),s=e[i],u=s.value||"";s.value=t[i]||s.value||"",s.label&&(y[i]=Array.isArray(s.label)?d.default.get.apply(d.default,s.label)||s.label[0]:s.label),r[a]&&n.push(r[a](i,s)),y[i]=l,s.value=u}return n.join("")}(t.typeUserAttrs[n],e);r.push(f)}return r.join("")};function T(e,t){return[["array",function(e){return!!e.options}],[i(t.value),function(){return!0}]].find(function(e){return e[1](t)})[0]||"string"}function U(e,t){var n=t.class,r=t.className,o=g(t,["class","className"]),i={id:e+"-"+w.lastID,title:o.description||o.label||e.toUpperCase(),name:e,type:o.type||"text",className:["fld-"+e,(n||r||"").trim()]},a='<label for="'+i.id+'">'+(y[e]||"")+"</label>";return["checkbox","checkbox-group","radio-group"].includes(i.type)||i.className.push("form-control"),i=Object.assign({},o,i),'<div class="form-group '+e+'-wrap">'+a+('<div class="input-wrap">'+("<input "+(0,h.attrString)(i)+">")+"</div>")+"</div>"}function z(e,t){var n=t.multiple,r=t.options,o=t.label,i=t.value,a=t.class,l=t.className,s=g(t,["multiple","options","label","value","class","className"]),u=Object.keys(r).map(function(e){var t={value:e},n=r[e],o=Array.isArray(n)?d.default.get.apply(d.default,n)||n[0]:n;return(Array.isArray(i)?i.includes(e):e===i)&&(t.selected=null),k("option",o,t)}),f={id:e+"-"+w.lastID,title:s.description||o||e.toUpperCase(),name:e,className:("fld-"+e+" form-control "+(a||l||"")).trim()};n&&(f.multiple=!0);var c='<label for="'+f.id+'">'+y[e]+"</label>";return Object.keys(s).forEach(function(e){f[e]=s[e]}),'<div class="form-group '+e+'-wrap">'+c+('<div class="input-wrap">'+k("select",u,f).outerHTML+"</div>")+"</div>"}var R=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=function(t){return k("label",t,{for:e+"-"+w.lastID}).outerHTML},o={type:"checkbox",className:"fld-"+e,name:e,id:e+"-"+w.lastID};t[e]&&(o.checked=!0);var i=[],a=[k("input",null,o).outerHTML];return n.first&&i.push(r(n.first)),n.second&&a.push(" ",r(n.second)),n.content&&a.push(n.content),a=k("div",a,{className:"input-wrap"}).outerHTML,k("div",i.concat(a),{className:"form-group "+e+"-wrap"}).outerHTML},H=function(e){var t="";"undefined"===e&&(e="default");var n="<label>"+y.style+"</label>";return t+=B.input({value:e||"default",type:"hidden",className:"btn-style"}).outerHTML,t+='<div class="btn-group" role="group">',m.styles.btn.forEach(function(n){var r=["btn-xs","btn","btn-"+n];e===n&&r.push("selected");var o=k("button",d.default.get("styles.btn."+n),{value:n,type:"button",className:r.join(" ")}).outerHTML;t+=o}),(t=k("div",[n,t+="</div>"],{className:"form-group style-wrap"})).outerHTML},Q=function(e,t){var n=t.class,r=t.className,o=g(t,["class","className"])[e],i=d.default.get(e)||e,a={type:"number",value:o,name:e,min:"0",placeholder:d.default.get("placeholder."+e),className:("fld-"+e+" form-control "+(n||r||"")).trim(),id:e+"-"+w.lastID},l=B.input((0,h.trimObj)(a)).outerHTML;return k("div",['<label for="'+a.id+'">'+i+"</label>",'<div class="input-wrap">'+l+"</div>"],{className:"form-group "+e+"-wrap"}).outerHTML},W=function(e,t,n){var r=n.map(function(n,r){var o=Object.assign({label:y.option+" "+r,value:void 0},n);return n.value===t[e]&&(o.selected=!0),o=(0,h.trimObj)(o),k("option",o.label,o)}),o={id:e+"-"+w.lastID,name:e,className:"fld-"+e+" form-control"},i=d.default.get(e)||(0,h.capitalize)(e)||"",a=k("label",i,{for:o.id}),l=k("select",r,o),s=k("div",l,{className:"input-wrap"});return k("div",[a,s],{className:"form-group "+o.name+"-wrap"}).outerHTML},K=function(e,n){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=n[e]||"",i=d.default.get(e);"label"===e&&(["paragraph"].includes(n.type)?i=d.default.get("content"):o=(0,h.parsedHtml)(o));var a=d.default.get("placeholders."+e)||"",l="";if(![].some(function(e){return!0===e})){var s={name:e,placeholder:a,className:"fld-"+e+" form-control",id:e+"-"+w.lastID},u=k("label",i,{for:s.id}).outerHTML;"label"!==e||t.disableHTMLLabels?(s.value=o,s.type="text",l+="<input "+(0,h.attrString)(s)+">"):(s.contenteditable=!0,l+=k("div",o,s).outerHTML);var f='<div class="input-wrap">'+l+"</div>",c=r?"none":"block";"value"===e&&(c=n.subtype&&"quill"===n.subtype&&"none"),l=k("div",[u,f],{className:"form-group "+e+"-wrap",style:"display: "+c})}return l.outerHTML},P=function(e){var t=e.type,n=[],r="";return["header","paragraph","button"].includes(t)&&n.push(!0),n.some(function(e){return!0===e})||(r=R("required",e,{first:d.default.get("required")})),r},Y=function(n){var r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],o=n.type||"text",i=n.label||(r?y.get(o)||d.default.get("label"):""),a=t.disabledFieldButtons[o]||n.disabledFieldButtons,l=[k("a",null,{type:"remove",id:"del_"+w.lastID,className:"del-button btn icon-cancel delete-confirm",title:d.default.get("removeMessage")}),k("a",null,{type:"edit",id:w.lastID+"-edit",className:"toggle-form btn icon-pencil",title:d.default.get("hide")}),k("a",null,{type:"copy",id:w.lastID+"-copy",className:"copy-button btn icon-copy",title:d.default.get("copyButtonTooltip")})];a&&Array.isArray(a)&&(l=l.filter(function(e){return!a.includes(e.type)}));var s=[k("div",l,{className:"field-actions"})];s.push(k("label",(0,h.parsedHtml)(i),{className:"field-label"})),s.push(k("span"," *",{className:"required-asterisk",style:n.required?"display:inline":""}));var u={className:"tooltip-element",tooltip:n.description,style:n.description?"display:inline-block":"display:none"};s.push(k("span","?",u)),s.push(k("div","",{className:"prev-holder"}));var f=k("div",[N(n),k("a",d.default.get("close"),{className:"close-field"})],{className:"form-elements"}),c=k("div",f,{id:w.lastID+"-holder",className:"frm-holder",dataFieldId:w.lastID});A.currentEditPanel=c,s.push(c);var p=k("li",s,{class:o+"-field form-field",type:o,id:w.lastID}),m=e(p);m.data("fieldData",{attrs:n}),void 0!==B.stopIndex?e("> li",C.stage).eq(B.stopIndex).before(m):E.append(m),e(".sortable-options",m).sortable({update:function(){return B.updatePreview(m)}}),B.updatePreview(m),t.typeUserEvents[o]&&t.typeUserEvents[o].onadd&&t.typeUserEvents[o].onadd(p),r&&(t.editOnAdd&&(B.closeAllEdit(),B.toggleEdit(w.lastID,!1)),p.scrollIntoView&&t.scrollToFieldOnAdd&&p.scrollIntoView({behavior:"smooth"})),w.lastID=B.incrementId(w.lastID)},G=function(e,t,n){var r={selected:n?"checkbox":"radio"},o=["value","label","selected"],i=[];t=Object.assign({selected:!1,label:"",value:""},t);for(var a=o.length-1;a>=0;a--){var l=o[a];if(t.hasOwnProperty(l)){var s={type:r[l]||"text",className:"option-"+l,value:t[l],name:e+"-option"};s.placeholder=d.default.get("placeholder."+l)||"","selected"===l&&!0===t.selected&&(s.checked=t.selected),i.push(k("input",null,s))}}var u={className:"remove btn icon-cancel",title:d.default.get("removeMessage")};return i.push(k("a",null,u)),k("li",i).outerHTML},J=[".form-elements input",".form-elements select",".form-elements textarea"].join(", ");E.on("change blur keyup click",J,(0,a.default)(function(t){if(t){if([function(e){var t=e.type,n=e.target;return"keyup"===t&&"className"===n.name}].some(function(e){return e(t)}))return!1;B.updatePreview(e(t.target).closest(".form-field")),B.save.call(B)}},333,{leading:!1})),E.on("click touchstart",".remove",function(n){var r=e(n.target).parents(".form-field:eq(0)"),o=r[0],i=o.getAttribute("type"),a=e(n.target.parentElement);n.preventDefault(),o.querySelector(".sortable-options").childNodes.length<=2&&!i.includes("checkbox")?t.notify.error("Error: "+d.default.get("minOptionMessage")):a.slideUp("250",function(){a.remove(),B.updatePreview(r),B.save.call(B)})}),E.on("touchstart","input",function(t){var n=e(r);if(!0===t.handled)return!1;if("checkbox"===n.attr("type"))n.trigger("click");else{n.focus();var o=n.val();n.val(o)}}),E.on("click touchstart",".toggle-form, .close-field",function(t){if(t.stopPropagation(),t.preventDefault(),!0===t.handled)return!1;var n=e(t.target).parents(".form-field:eq(0)").attr("id");B.toggleEdit(n),t.handled=!0}),E.on("dblclick","li.form-field",function(t){if(!["select","input","label"].includes(t.target.tagName.toLowerCase())&&"true"!==t.target.contentEditable&&(t.stopPropagation(),t.preventDefault(),!0!==t.handled)){var n="li"==t.target.tagName?e(t.target).attr("id"):e(t.target).closest("li.form-field").attr("id");B.toggleEdit(n),t.handled=!0}}),E.on("change",'[name="subtype"]',function(t){var n=e(t.target).closest("li.form-field");e(".value-wrap",n).toggle("quill"!==t.target.value)});if(E.on("change",[".prev-holder input",".prev-holder select",".prev-holder textarea"].join(", "),function(e){var t=void 0;if(!e.target.classList.contains("other-option")){var n=(0,h.closest)(e.target,".form-field");if(["select","checkbox-group","radio-group"].includes(n.type)){var r=n.getElementsByClassName("option-value");"select"===n.type?(0,h.forEach)(r,function(t){r[t].parentElement.childNodes[0].checked=e.target.value===r[t].value}):(t=document.getElementsByName(e.target.name),(0,h.forEach)(t,function(e){r[e].parentElement.childNodes[0].checked=t[e].checked}))}else{var o=document.getElementById("value-"+n.id);o&&(o.value=e.target.value)}B.save.call(B)}}),(0,h.addEventListeners)(C.stage,"keyup change",function(e){var t=e.target;if(t.classList.contains("fld-label")){var n=t.value||t.innerHTML;(0,h.closest)(t,".form-field").querySelector(".field-label").innerHTML=(0,h.parsedHtml)(n)}}),E.on("keyup","input.error",function(t){var n=t.target;return e(n).removeClass("error")}),E.on("keyup",'input[name="description"]',function(t){var n=e(t.target).parents(".form-field:eq(0)"),r=e(".tooltip-element",n),o=e(t.target).val();if(""!==o)if(r.length)r.attr("tooltip",o).css("display","inline-block");else{var i='<span class="tooltip-element" tooltip="'+o+'">?</span>';e(".field-label",n).after(i)}else r.length&&r.css("display","none")}),E.on("change",".fld-multiple",function(t){var n=t.target.checked?"checkbox":"radio",r=e(".option-selected",e(t.target).closest(".form-elements"));return r.each(function(e){return r[e].type=n}),n}),E.on("blur","input.fld-name",function(t){t.target.value=(0,h.safename)(t.target.value),""===t.target.value?e(t.target).addClass("field-error").attr("placeholder",d.default.get("cannotBeEmpty")):e(t.target).removeClass("field-error")}),E.on("blur","input.fld-maxlength",function(e){e.target.value=(0,h.forceNumber)(e.target.value)}),E.on("click touchstart",".icon-copy",function(n){n.preventDefault();var r=e(n.target).parent().parent("li"),o=function(n){var r=n.attr("id"),o=n.attr("type"),i=o+"-"+(new Date).getTime(),a=n.clone();return e(".fld-name",a).val(i),a.find("[id]").each(function(e,t){t.id=t.id.replace(r,w.lastID)}),a.find("[for]").each(function(e,t){var n=t.getAttribute("for").replace(r,w.lastID);t.setAttribute("for",n)}),a.attr("id",w.lastID),a.attr("name",i),a.addClass("cloned"),e(".sortable-options",a).sortable(),t.typeUserEvents[o]&&t.typeUserEvents[o].onclone&&t.typeUserEvents[o].onclone(a[0]),w.lastID=B.incrementId(w.lastID),a}(r);o.insertAfter(r),B.updatePreview(o),B.save.call(B)}),E.on("click touchstart",".delete-confirm",function(n){n.preventDefault();var r=n.target.getBoundingClientRect(),o=document.body.getBoundingClientRect(),i={pageX:r.left+r.width/2,pageY:r.top-o.top-12},a=e(n.target).parents(".form-field:eq(0)").attr("id"),l=e(document.getElementById(a));if(document.addEventListener("modalClosed",function(){l.removeClass("deleting")},!1),t.fieldRemoveWarn){var s=k("h3",d.default.get("warning")),u=k("p",d.default.get("fieldRemoveWarning"));B.confirm([s,u],function(){return B.removeField(a)},i),l.addClass("deleting")}else B.removeField(a)}),E.on("click",".style-wrap button",function(t){var n=e(t.target),r=n.closest(".form-elements"),o=n.val(),i=e(".btn-style",r);i.val(o),n.siblings(".btn").removeClass("selected"),n.addClass("selected"),B.updatePreview(i.closest(".form-field")),B.save()}),E.on("click",".fld-required",function(t){e(t.target).closest(".form-field").find(".required-asterisk").toggle()}),E.on("click","input.fld-access",function(t){var n=e(t.target).closest(".form-field").find(".available-roles"),r=e(t.target);n.slideToggle(250,function(){r.is(":checked")||e("input[type=checkbox]",n).removeAttr("checked")})}),E.on("click",".add-opt",function(t){t.preventDefault();var n=e(t.target).closest(".field-options"),r=e('[name="multiple"]',n),o=e(".option-selected:eq(0)",n),i=!1;i=r.length?r.prop("checked"):"checkbox"===o.attr("type");var a=o.attr("name").replace(/-option$/,"");e(".sortable-options",n).append(G(a,!1,i))}),E.on("mouseover mouseout",".remove, .del-button",function(t){return e(t.target).closest("li").toggleClass("delete")}),I(),t.disableInjectedStyle){var Z=document.getElementsByClassName("formBuilder-injected-style");(0,h.forEach)(Z,function(e){return(0,l.remove)(Z[e])})}return document.dispatchEvent(f.default.loaded),A.actions={getFieldTypes:function(e){return e?(0,h.subtract)(O.getRegistered(),t.disableFields):O.getRegistered()},clearFields:function(e){return B.removeAllFields(C.stage,e)},showData:B.showData.bind(B),save:B.save.bind(B),addField:function(e,t){B.stopIndex=w.formData.length?t:void 0,S(e)},removeField:B.removeField.bind(B),getData:B.getFormData.bind(B),setData:function(e){B.stopIndex=void 0,B.removeAllFields(C.stage,!1),I(e)},setLang:function(e){d.default.setCurrent.call(d.default,e).then(function(){C.stage.dataset.content=d.default.get("getStarted"),O.init(),C.empty(C.formActions),B.formActionButtons().forEach(function(e){return C.formActions.appendChild(e)})})},toggleFieldEdit:function(e){(Array.isArray(e)?e:[e]).forEach(function(e){["number","string"].includes(void 0===e?"undefined":i(e))&&("number"==typeof e?e=C.stage.children[e].id:/^frmb-/.test(e)||(e=C.stage.querySelector(e).id),B.toggleEdit(e))})},toggleAllFieldEdit:function(){(0,h.forEach)(C.stage.children,function(e){B.toggleEdit(C.stage.children[e].id)})},closeAllFieldEdit:B.closeAllEdit.bind(B),addControl:O.addControl},C.onRender(C.controls,function(){setTimeout(function(){C.stage.style.minHeight=C.controls.clientHeight+"px",t.stickyControls.enable&&B.stickyControls(E)},0)}),A};!function(e){jQuery.fn.formBuilder=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n={init:function(t,r){var o=jQuery.extend({},m.defaultOptions,t,!0),i=o.i18n,a=g(o,["i18n"]);m.config.opts=a;var l=jQuery.extend({},m.defaultI18n,i,!0);return n.instance={actions:{getFieldTypes:null,addField:null,clearFields:null,closeAllFieldEdit:null,getData:null,removeField:null,save:null,setData:null,setLang:null,showData:null,toggleAllFieldEdit:null,toggleFieldEdit:null,addControl:null},get formData(){return n.instance.actions.getData&&n.instance.actions.getData("json")},promise:new Promise(function(t,o){d.default.init(l).then(function(){r.each(function(t){var o=new y(a,r[t]);e(r[t]).data("formBuilder",o),Object.assign(n,o.actions),n.instance.actions=o.actions}),delete n.instance.promise,t(n.instance)}).catch(a.notify.error)})},n.instance}},r=void 0;if(n[t]){for(var o=arguments.length,i=Array(o>1?o-1:0),a=1;a<o;a++)i[a-1]=arguments[a];r=n[t].apply(this,i)}else{var l=n.init(t,this);Object.assign(n,l),r=l}return r}}(jQuery)}])}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,