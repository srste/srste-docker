[
	{
		"uid": "0d9009d0-63a4-11e8-9b18-cf07d4d58af4",
		"Table": "MetaLocalSync",
		"Field": "payload",
		"ExportScript": "(function () {\n    $tbl.MetaLocalSync.find({})\n        .then(function (instances) {\n            if (instances && instances.length > 0) {\n                var payloadArry = [];\n                for (var indx in instances) {\n                    var instanceObj = instances[indx];\n                    payloadArry.push({\n                        \"uid\": instanceObj['uid'],\n                        \"Table\": instanceObj['Table'],\n                        \"Field\": instanceObj['Field'],\n                        \"ExportScript\": instanceObj['ExportScript'],\n                        \"ImportScript\": instanceObj['ImportScript'],\n                        \"ExportCondition\": instanceObj['ExportCondition'],\n                        \"ImportCondition\": instanceObj['ImportCondition'],                        \n                        \"LocalPath\": instanceObj['LocalPath'],\n                        \"Level\": instanceObj['Level'],\n                        \"Active\": instanceObj['Active']\n                    });\n                }\n                $topResolve({ \"payload\": JSON.stringify(payloadArry, null, '\\t') });\n            } else {\n                $topResolve({ 'payload': JSON.stringify(\"\") });\n            }\n        })\n        .catch(function (err) {\n            $topResolve({ 'payload': JSON.stringify(\"\") });\n        });\n})",
		"ImportScript": "(function () {\n    try {\n        var records2Update = JSON.parse($fileContent);\n        if (records2Update) {\n            var totalPendingRecords = records2Update.length - 1;\n            records2Update.forEach(function (record2Update) {\n                $tbl[$dataTable].upsertWithWhere({ uid: record2Update['uid'] }, record2Update)\n                    .then(function (resp) {\n                        if (totalPendingRecords == 0) {\n                            $topResolve({});\n                        } else {\n                            totalPendingRecords--;\n                        }\n                    })\n                    .catch(function (err) {\n                        if (totalPendingRecords == 0) {\n                            $topResolve({});\n                        } else {\n                            totalPendingRecords--;\n                        }\n                    });\n            });\n        }\n    } catch (ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n})",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/server/localsync/configuration.js",
		"Level": "Table",
		"Active": "true"
	},
	{
		"uid": "1819bab0-5c18-11e8-92e2-1520ca24a597",
		"Table": "MetaReusableUIScript",
		"Field": "Definition",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'Definition': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope']\n                    };\n\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {          \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/client/script/${Scope}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "24c23ba0-5bd9-11e8-92e2-1520ca24a597",
		"Table": "MetaComponent",
		"Field": "Definition",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'Definition': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope']\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {       \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                   console.log('error updating component - ' + err);\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/component/${Scope}/${Name}/Definition.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "3098c950-5c18-11e8-92e2-1520ca24a597",
		"Table": "MetaReusableScript",
		"Field": "Definition",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'Definition': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope'],\n                        'Omni': false\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {          \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": "$topResolve($live['Omni'] == 0)",
		"ImportCondition": null,
		"LocalPath": "/server/script/${Scope}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "34acfa50-8da2-11e8-9969-853baa65a85f",
		"Table": "MetaResource",
		"Field": "Definition",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'Definition': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope'],\n                        'Type': $input['Type']\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {          \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/common/resource/${Scope}/${Name}.${Type}",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "3f038a80-5c17-11e8-92e2-1520ca24a597",
		"Table": "MetaRoute",
		"Field": "payload",
		"ExportScript": "(function() {\n\t$qry.run('mmf.getRouteDependencies', {\"routeId\": $live['uid']}) \n\t.then((routeDetails) => {\n        if(routeDetails) {        \t\n            let {uid, Name, Scope, Path, HTML, requiredComponents} = routeDetails;\n            let dependsArry = (requiredComponents.edges && requiredComponents.edges.length > 0)? requiredComponents.edges: [];\n            let depends = [];\n            dependsArry.forEach((requiredComponent) => {\n                if(requiredComponent && requiredComponent.node && requiredComponent.node.RequiredComponent) {\n                    depends.push({'uid': requiredComponent.node.RequiredComponent, 'order': requiredComponent.node.Order});\n                }\n            });\n            let output = {Name, Scope, Path, HTML, depends};\n            $topResolve({ \"payload\": JSON.stringify(output, null, '\\t')});\n        }else {\n        \t$topResolve();\n    \t}\t\t\n\t})\n\t.catch((err) => {\n\t\tconsole.log(err);\n\t\t$topResolve();\n\t});\t\t\n})",
		"ImportScript": "(function () {\n    var payloadArry = [];\n\n    try {\n        var record2Update = JSON.parse($fileContent);\n        if (record2Update) {\n            let routeRecord = {\n                'uid': $fileUID,\n                'Name': record2Update.Name,\n                'Scope': record2Update.Scope,\n                'Path': record2Update.Path,\t       \n                'HTML': record2Update.HTML\n            };\n \t   \n            $qry.run('mmf.updateRoute', routeRecord)\n                .then((routeDetails) => {\n                    if (record2Update.depends) {\n                        var dependentsUpdatePromises = [];\n                        record2Update.depends.forEach((data) => {\n                            dependentsUpdatePromises.push(new Promise((resolve, reject) => {\n                                let routeRequired = {\n                                    routeId: routeRecord.uid,\n                                    requiredComponentId: data.uid,\n                                    order: data.order\n                                };\t\t\t\n\n                                $qry.run('mmf.updateRouteDependency', routeRequired)\n                                    .then((resp) => {\n                                        resolve();\n                                    }).\n                                    catch((err) => {\n\t\t\t\t     console.log('Error occurred...' + err);\n                                        resolve();\n                                    });\n                            }));\n                        });\n                        Promise.all(dependentsUpdatePromises)\n\t\t      .then(() => $topResolve())\n\t\t      .catch((err) => { \n\t\t\tconsole.log('Error processing dependents - ' + err);\n\t\t\t$topResolve();\n\t\t       })\n                    } else {\n                        $topResolve();\n                    }\n                })\n                .catch((err) => {\n\t\t  console.log('Error updating route - ' + $fileContent + ':: error = ' + err);\n                    $topResolve();\n                });\n        }\n    } catch (err) {\n        console.log('Error updating route - ' + $fileContent + ':: error = ' + err);\n    }\n})\n",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/server/routes/${Scope}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "5a214360-5c18-11e8-92e2-1520ca24a597",
		"Table": "MetaOperationHook",
		"Field": "Definition",
		"ExportScript": "function() {\n    $tbl.MetaModel.find({\n        \"where\": {\n            \"uid\": $live[\"hooks\"]\n        }\n    })\n    .then(function (instances) {\n        if (instances && instances.length == 1) {\n            $topResolve({\n                'ModelName': instances[0]['Name']\n            });\n        } else {\n            $topResolve({\n                'ModelName': 'Unknown'\n            });\n        }\n    })\n    .catch(function (err) {\n        $topResolve({\n            'ModelName': 'Unknown'\n        });\n    });\n}",
		"ImportScript": "(function() {\n  $topResolve({});\n})",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/server/hook/${Scope}/${ModelName}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "5a43cef0-16f6-11e9-8a4a-d713482cbbe0",
		"Table": "MetaComponent",
		"Field": "payload",
		"ExportScript": "function() {\n      try {\n        $utils.templateDefLoader($qry, $live['Scope'], $live['Name'])\n\t.then((output) => {\n\t\t$topResolve({ \"payload\":output});\n\t});\n\n    }catch(err){\n\tconsole.log(err);\n    }\n}",
		"ImportScript": "(function() {\n\t $topResolve({});\n })",
		"ExportCondition": null,
		"ImportCondition": "$topResolve(1== 0)",
		"LocalPath": "/component/${Scope}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "5f4f4090-7b11-11e8-8cc8-b56e81d10049",
		"Table": "MetaQuery",
		"Field": "payload",
		"ExportScript": "(function() {\n\tvar payload = {\n            \"Name\": $live['Name'],\n            \"Scope\": $live['Scope'],\n            \"Definition\": $live['Definition'],            \n            \"Variables\": $live['Variables'],\n            \"AccessPath\": $live['AccessPath']\n          }\n        $topResolve({ \"payload\": JSON.stringify(payload, null, '\\t')});\n})",
		"ImportScript": "(function() {\n       try{\n           var record2Update = JSON.parse($fileContent);\n           record2Update['uid'] = $fileUID;\n           if(record2Update) {            \n                   $tbl[$dataTable].upsertWithWhere({uid:record2Update['uid']}, record2Update)\n                   .then(function(resp) {\n                           $topResolve({});                    \n                   })\n                   .catch(function(err) {\n                           $topResolve({});                                      \n                   });\n               }\n        }catch(ex) {\n           console.log('Error occurred while executing the import script - ' + ex);\n           $topReject();\n       }\n})",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/server/query/${Scope}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "75fff7c0-5c18-11e8-92e2-1520ca24a597",
		"Table": "MetaModel",
		"Field": "Definition",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'Definition': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope']\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {          \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/server/model/${Scope}/${Name}.json",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "a30d0180-5c14-11e8-92e2-1520ca24a597",
		"Table": "MetaComponent",
		"Field": "payload",
		"ExportScript": "function() {\n  $tbl.MetaComponentState.find({'where': {'StateComponent': $live['uid']}})\n    .then(function (instances) {\n      if (instances && instances.length > 0) {\n        var payloadArry = [];\n        for (var indx in instances) {\n          var instanceObj = instances[indx];\n          payloadArry.push({\n            \"KeyName\": instanceObj['KeyName'],\n            \"AccessPath\": instanceObj['AccessPath'],\n            \"DefaultValue\": instanceObj['DefaultValue'],\n            \"Scope\": instanceObj['Scope'],\n            \"uid\": instanceObj['uid'],\n            \"StateComponent\": instanceObj['StateComponent']\n          });\n        }\n        $topResolve({ \"payload\": JSON.stringify(payloadArry, null, '\\t') });\n      } else {\n        $topResolve({});\n      }\n    })\n    .catch(function (err) {\n    \t$topResolve({});\n    });\n}",
		"ImportScript": "(function() {\n    try{\n        var records2Update = JSON.parse($fileContent);\n        if(records2Update) {\n            var totalPendingRecords = records2Update.length - 1;\n            records2Update.forEach(function(record2Update) {\n                record2Update['states'] = $fileUID;\n                $tbl['MetaComponentState'].upsertWithWhere({uid:record2Update['uid']}, record2Update)\n                .then(function(resp) {\n                    if(totalPendingRecords == 0) {\n                        $topResolve({});\n                    }else{\n                        totalPendingRecords--;\n                    }\n                })\n                .catch(function(err) {\n                    if(totalPendingRecords == 0) {\n                        $topResolve({});\n                    }else{\n                        totalPendingRecords--;\n                    }                    \n                });\n            });\n        }\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/component/${Scope}/${Name}/State.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "b159bdf0-5c14-11e8-92e2-1520ca24a597",
		"Table": "MetaComponent",
		"Field": "payload",
		"ExportScript": "function() {\n  $tbl.MetaComponentAction.find({'where': {'ActionComponent': $live['uid']}})\n    .then(function (instances) {\n      if (instances && instances.length > 0) {\n        var payloadArry = [];\n        for (var indx in instances) {\n          var instanceObj = instances[indx];\n          payloadArry.push({\n            \"Action\": instanceObj['Action'],\n            \"Definition\": instanceObj['Definition'],\n            \"Scope\": instanceObj['Scope'],\n            \"uid\": instanceObj['uid'],\n            \"ActionComponent\": instanceObj['ActionComponent']\n          });\n        }\n        $topResolve({ \"payload\": JSON.stringify(payloadArry, null, '\\t') });\n      } else {\n        $topResolve({});\n      }\n    })\n    .catch(function (err) {\n    \t$topResolve({});\n    });\n}",
		"ImportScript": "(function() {\n    try{\n        var records2Update = JSON.parse($fileContent);\n        if(records2Update) {\n            var totalPendingRecords = records2Update.length - 1;\n            records2Update.forEach(function(record2Update) {\n                record2Update['actions'] = $fileUID;\n                $tbl['MetaComponentAction'].upsertWithWhere({uid:record2Update['uid']}, record2Update)\n                .then(function(resp) {\n                    if(totalPendingRecords == 0) {\n                        $topResolve({});\n                    }else{\n                        totalPendingRecords--;\n                    }\n                })\n                .catch(function(err) {\n                    if(totalPendingRecords == 0) {\n                        $topResolve({});\n                    }else{\n                        totalPendingRecords--;\n                    }                    \n                });\n            });\n        }\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/component/${Scope}/${Name}/Action.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "b42a34b0-ec6f-11e8-9703-1fb86fb8740e",
		"Table": "MetaTemplate",
		"Field": "Definition",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'Definition': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope']\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {       \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                   console.log('error updating component - ' + err);\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/client/template/${Scope}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "b5e2a9f0-7f1d-11e8-bbc3-1f7e217ff07e",
		"Table": "MetaReusableScript",
		"Field": "Definition",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'Definition': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope'],\n                        'Omni': true\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {          \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": "$topResolve($live['Omni'] == 1)",
		"ImportCondition": null,
		"LocalPath": "/common/script/${Scope}/${Name}.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "be0b6fa0-eb7d-11e8-93ef-118599e49f22",
		"Table": "MetaComponent",
		"Field": "HTML",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n       var payload = {'HTML': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope']\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {       \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                   console.log('error updating component - ' + err);\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/component/${Scope}/${Name}/HTML.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "cd67d1e0-eb7e-11e8-b853-03a508b6d700",
		"Table": "MetaComponent",
		"Field": "payload",
		"ExportScript": "function() {\n  $tbl.MetaComponentRequires.find({'where': {'Component': $live['uid']}})\n    .then(function (instances) {\n      if (instances && instances.length > 0) {\n        var payloadArry = [];\n        for (var indx in instances) {\n          var instanceObj = instances[indx];\n          payloadArry.push({\n            \"uid\": instanceObj['uid'],\n            \"Component\": instanceObj['Component'],\n            \"RequiredComponent\": instanceObj['RequiredComponent']\n          });\n        }\n        $topResolve({ \"payload\": JSON.stringify(payloadArry, null, '\\t') });\n      } else {\n        $topResolve({});\n      }\n    })\n    .catch(function (err) {\n    \t$topResolve({});\n    });\n}",
		"ImportScript": "(function() {\n    try{\n        var records2Update = JSON.parse($fileContent);\n        if(records2Update) {\n            var totalPendingRecords = records2Update.length - 1;\n            records2Update.forEach(function(record2Update) {\n                $tbl['MetaComponentRequires'].upsertWithWhere({uid:record2Update['uid']}, record2Update)\n                .then(function(resp) {\n                    if(totalPendingRecords == 0) {\n                        $topResolve({});\n                    }else{\n                        totalPendingRecords--;\n                    }\n                })\n                .catch(function(err) {\n                    if(totalPendingRecords == 0) {\n                        $topResolve({});\n                    }else{\n                        totalPendingRecords--;\n                    }                    \n                });\n            });\n        }\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/component/${Scope}/${Name}/Dependencies.js",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "dac3c570-5c12-11e8-92e2-1520ca24a597",
		"Table": "MetaComponent",
		"Field": "CSS",
		"ExportScript": null,
		"ImportScript": "(function() {\n    try{\n        var payload = {'CSS': $fileContent, \n                        'uid': $fileUID, \n                        'Name': $input['Name'], \n                        'Scope': $input['Scope']\n                    };\n        $tbl[$dataTable].upsertWithWhere({uid:$fileUID}, payload)\n                .then(function(resp) {          \n                    $topResolve({});\n                })\n                .catch(function(err) {\n                    $topResolve({});                 \n                });\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/component/${Scope}/${Name}/Style.css",
		"Level": "Record",
		"Active": "true"
	},
	{
		"uid": "e5dd2a30-ec47-11e8-b853-03a508b6d700",
		"Table": "MetaComponent",
		"Field": "payload",
		"ExportScript": "function() {\n  $tbl.MetaComponent.find({'where': {'uid': $live['uid']}})\n    .then(function (instances) {\n      if (instances && instances.length == 1) {\n        var payload = {};        \n        var instanceObj = instances[0];\n        if(instanceObj['WebComponent']) {\n\t\tpayload['WebComponent'] = instanceObj['WebComponent'];\n        }\n        if(instanceObj['Type']) {\n      \t\tpayload['Type'] = instanceObj['Type'];\n        }\n        if(instanceObj['Version']) {\n     \t\tpayload['Version'] = instanceObj['Version'];\n        }\n       \n        $topResolve({ \"payload\": JSON.stringify(payload, null, '\\t') });\n      } else {\n        $topResolve({});\n      }\n    })\n    .catch(function (err) {\n    \t$topResolve({});\n    });\n}",
		"ImportScript": "(function() {\n    try{\n       var record2Update = JSON.parse($fileContent);\n       var recordFields = record2Update? Object.keys(record2Update): null;\n       if(record2Update && recordFields && recordFields.length > 0) {\n               $tbl['MetaComponent'].upsertWithWhere({uid:$fileUID}, record2Update)\n               .then(function(resp) {                   \n                    $topResolve({});\n\t       })\n               .catch(function(err) {                  \n                   $topResolve({});                                     \n               });\n        }else {\n\t  $topResolve({});\n        }\n    }catch(ex) {\n        console.log('Error occurred while executing the import script - ' + ex);\n        $topReject();\n    }\n })",
		"ExportCondition": null,
		"ImportCondition": null,
		"LocalPath": "/component/${Scope}/${Name}/Configuration.js",
		"Level": "Record",
		"Active": "true"
	}
]